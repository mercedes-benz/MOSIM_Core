/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package de.mosim.mmi.services;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-09-24")
public class MSkeletonAccess {

  public interface Iface extends MMIServiceBase.Iface {

    public void InitializeAnthropometry(de.mosim.mmi.avatar.MAvatarDescription description) throws org.apache.thrift.TException;

    public de.mosim.mmi.avatar.MAvatarDescription GetAvatarDescription(java.lang.String avatarID) throws org.apache.thrift.TException;

    public void SetAnimatedJoints(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints) throws org.apache.thrift.TException;

    public void SetChannelData(de.mosim.mmi.avatar.MAvatarPostureValues values) throws org.apache.thrift.TException;

    public de.mosim.mmi.avatar.MAvatarPosture GetCurrentGlobalPosture(java.lang.String avatarID) throws org.apache.thrift.TException;

    public de.mosim.mmi.avatar.MAvatarPosture GetCurrentLocalPosture(java.lang.String avatarID) throws org.apache.thrift.TException;

    public de.mosim.mmi.avatar.MAvatarPostureValues GetCurrentPostureValues(java.lang.String avatarID) throws org.apache.thrift.TException;

    public de.mosim.mmi.avatar.MAvatarPostureValues GetCurrentPostureValuesPartial(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints) throws org.apache.thrift.TException;

    public java.util.List<de.mosim.mmi.math.MVector3> GetCurrentJointPositions(java.lang.String avatarID) throws org.apache.thrift.TException;

    public de.mosim.mmi.math.MVector3 GetRootPosition(java.lang.String avatarID) throws org.apache.thrift.TException;

    public de.mosim.mmi.math.MQuaternion GetRootRotation(java.lang.String avatarID) throws org.apache.thrift.TException;

    public de.mosim.mmi.math.MVector3 GetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException;

    public de.mosim.mmi.math.MQuaternion GetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException;

    public de.mosim.mmi.math.MVector3 GetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException;

    public de.mosim.mmi.math.MQuaternion GetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException;

    public void SetRootPosition(java.lang.String avatarId, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException;

    public void SetRootRotation(java.lang.String avatarId, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException;

    public void SetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException;

    public void SetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException;

    public void SetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException;

    public void SetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException;

    public de.mosim.mmi.avatar.MAvatarPostureValues RecomputeCurrentPostureValues(java.lang.String avatarId) throws org.apache.thrift.TException;

  }

  public interface AsyncIface extends MMIServiceBase .AsyncIface {

    public void InitializeAnthropometry(de.mosim.mmi.avatar.MAvatarDescription description, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void GetAvatarDescription(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarDescription> resultHandler) throws org.apache.thrift.TException;

    public void SetAnimatedJoints(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void SetChannelData(de.mosim.mmi.avatar.MAvatarPostureValues values, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void GetCurrentGlobalPosture(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler) throws org.apache.thrift.TException;

    public void GetCurrentLocalPosture(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler) throws org.apache.thrift.TException;

    public void GetCurrentPostureValues(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException;

    public void GetCurrentPostureValuesPartial(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException;

    public void GetCurrentJointPositions(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.math.MVector3>> resultHandler) throws org.apache.thrift.TException;

    public void GetRootPosition(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException;

    public void GetRootRotation(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException;

    public void GetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException;

    public void GetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException;

    public void GetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException;

    public void GetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException;

    public void SetRootPosition(java.lang.String avatarId, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void SetRootRotation(java.lang.String avatarId, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void SetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void SetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void SetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void SetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void RecomputeCurrentPostureValues(java.lang.String avatarId, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends MMIServiceBase.Client implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public void InitializeAnthropometry(de.mosim.mmi.avatar.MAvatarDescription description) throws org.apache.thrift.TException
    {
      send_InitializeAnthropometry(description);
      recv_InitializeAnthropometry();
    }

    public void send_InitializeAnthropometry(de.mosim.mmi.avatar.MAvatarDescription description) throws org.apache.thrift.TException
    {
      InitializeAnthropometry_args args = new InitializeAnthropometry_args();
      args.setDescription(description);
      sendBase("InitializeAnthropometry", args);
    }

    public void recv_InitializeAnthropometry() throws org.apache.thrift.TException
    {
      InitializeAnthropometry_result result = new InitializeAnthropometry_result();
      receiveBase(result, "InitializeAnthropometry");
      return;
    }

    public de.mosim.mmi.avatar.MAvatarDescription GetAvatarDescription(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetAvatarDescription(avatarID);
      return recv_GetAvatarDescription();
    }

    public void send_GetAvatarDescription(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetAvatarDescription_args args = new GetAvatarDescription_args();
      args.setAvatarID(avatarID);
      sendBase("GetAvatarDescription", args);
    }

    public de.mosim.mmi.avatar.MAvatarDescription recv_GetAvatarDescription() throws org.apache.thrift.TException
    {
      GetAvatarDescription_result result = new GetAvatarDescription_result();
      receiveBase(result, "GetAvatarDescription");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetAvatarDescription failed: unknown result");
    }

    public void SetAnimatedJoints(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints) throws org.apache.thrift.TException
    {
      send_SetAnimatedJoints(avatarID, joints);
      recv_SetAnimatedJoints();
    }

    public void send_SetAnimatedJoints(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints) throws org.apache.thrift.TException
    {
      SetAnimatedJoints_args args = new SetAnimatedJoints_args();
      args.setAvatarID(avatarID);
      args.setJoints(joints);
      sendBase("SetAnimatedJoints", args);
    }

    public void recv_SetAnimatedJoints() throws org.apache.thrift.TException
    {
      SetAnimatedJoints_result result = new SetAnimatedJoints_result();
      receiveBase(result, "SetAnimatedJoints");
      return;
    }

    public void SetChannelData(de.mosim.mmi.avatar.MAvatarPostureValues values) throws org.apache.thrift.TException
    {
      send_SetChannelData(values);
      recv_SetChannelData();
    }

    public void send_SetChannelData(de.mosim.mmi.avatar.MAvatarPostureValues values) throws org.apache.thrift.TException
    {
      SetChannelData_args args = new SetChannelData_args();
      args.setValues(values);
      sendBase("SetChannelData", args);
    }

    public void recv_SetChannelData() throws org.apache.thrift.TException
    {
      SetChannelData_result result = new SetChannelData_result();
      receiveBase(result, "SetChannelData");
      return;
    }

    public de.mosim.mmi.avatar.MAvatarPosture GetCurrentGlobalPosture(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetCurrentGlobalPosture(avatarID);
      return recv_GetCurrentGlobalPosture();
    }

    public void send_GetCurrentGlobalPosture(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetCurrentGlobalPosture_args args = new GetCurrentGlobalPosture_args();
      args.setAvatarID(avatarID);
      sendBase("GetCurrentGlobalPosture", args);
    }

    public de.mosim.mmi.avatar.MAvatarPosture recv_GetCurrentGlobalPosture() throws org.apache.thrift.TException
    {
      GetCurrentGlobalPosture_result result = new GetCurrentGlobalPosture_result();
      receiveBase(result, "GetCurrentGlobalPosture");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetCurrentGlobalPosture failed: unknown result");
    }

    public de.mosim.mmi.avatar.MAvatarPosture GetCurrentLocalPosture(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetCurrentLocalPosture(avatarID);
      return recv_GetCurrentLocalPosture();
    }

    public void send_GetCurrentLocalPosture(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetCurrentLocalPosture_args args = new GetCurrentLocalPosture_args();
      args.setAvatarID(avatarID);
      sendBase("GetCurrentLocalPosture", args);
    }

    public de.mosim.mmi.avatar.MAvatarPosture recv_GetCurrentLocalPosture() throws org.apache.thrift.TException
    {
      GetCurrentLocalPosture_result result = new GetCurrentLocalPosture_result();
      receiveBase(result, "GetCurrentLocalPosture");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetCurrentLocalPosture failed: unknown result");
    }

    public de.mosim.mmi.avatar.MAvatarPostureValues GetCurrentPostureValues(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetCurrentPostureValues(avatarID);
      return recv_GetCurrentPostureValues();
    }

    public void send_GetCurrentPostureValues(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetCurrentPostureValues_args args = new GetCurrentPostureValues_args();
      args.setAvatarID(avatarID);
      sendBase("GetCurrentPostureValues", args);
    }

    public de.mosim.mmi.avatar.MAvatarPostureValues recv_GetCurrentPostureValues() throws org.apache.thrift.TException
    {
      GetCurrentPostureValues_result result = new GetCurrentPostureValues_result();
      receiveBase(result, "GetCurrentPostureValues");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetCurrentPostureValues failed: unknown result");
    }

    public de.mosim.mmi.avatar.MAvatarPostureValues GetCurrentPostureValuesPartial(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints) throws org.apache.thrift.TException
    {
      send_GetCurrentPostureValuesPartial(avatarID, joints);
      return recv_GetCurrentPostureValuesPartial();
    }

    public void send_GetCurrentPostureValuesPartial(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints) throws org.apache.thrift.TException
    {
      GetCurrentPostureValuesPartial_args args = new GetCurrentPostureValuesPartial_args();
      args.setAvatarID(avatarID);
      args.setJoints(joints);
      sendBase("GetCurrentPostureValuesPartial", args);
    }

    public de.mosim.mmi.avatar.MAvatarPostureValues recv_GetCurrentPostureValuesPartial() throws org.apache.thrift.TException
    {
      GetCurrentPostureValuesPartial_result result = new GetCurrentPostureValuesPartial_result();
      receiveBase(result, "GetCurrentPostureValuesPartial");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetCurrentPostureValuesPartial failed: unknown result");
    }

    public java.util.List<de.mosim.mmi.math.MVector3> GetCurrentJointPositions(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetCurrentJointPositions(avatarID);
      return recv_GetCurrentJointPositions();
    }

    public void send_GetCurrentJointPositions(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetCurrentJointPositions_args args = new GetCurrentJointPositions_args();
      args.setAvatarID(avatarID);
      sendBase("GetCurrentJointPositions", args);
    }

    public java.util.List<de.mosim.mmi.math.MVector3> recv_GetCurrentJointPositions() throws org.apache.thrift.TException
    {
      GetCurrentJointPositions_result result = new GetCurrentJointPositions_result();
      receiveBase(result, "GetCurrentJointPositions");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetCurrentJointPositions failed: unknown result");
    }

    public de.mosim.mmi.math.MVector3 GetRootPosition(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetRootPosition(avatarID);
      return recv_GetRootPosition();
    }

    public void send_GetRootPosition(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetRootPosition_args args = new GetRootPosition_args();
      args.setAvatarID(avatarID);
      sendBase("GetRootPosition", args);
    }

    public de.mosim.mmi.math.MVector3 recv_GetRootPosition() throws org.apache.thrift.TException
    {
      GetRootPosition_result result = new GetRootPosition_result();
      receiveBase(result, "GetRootPosition");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetRootPosition failed: unknown result");
    }

    public de.mosim.mmi.math.MQuaternion GetRootRotation(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      send_GetRootRotation(avatarID);
      return recv_GetRootRotation();
    }

    public void send_GetRootRotation(java.lang.String avatarID) throws org.apache.thrift.TException
    {
      GetRootRotation_args args = new GetRootRotation_args();
      args.setAvatarID(avatarID);
      sendBase("GetRootRotation", args);
    }

    public de.mosim.mmi.math.MQuaternion recv_GetRootRotation() throws org.apache.thrift.TException
    {
      GetRootRotation_result result = new GetRootRotation_result();
      receiveBase(result, "GetRootRotation");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetRootRotation failed: unknown result");
    }

    public de.mosim.mmi.math.MVector3 GetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      send_GetGlobalJointPosition(avatarId, joint);
      return recv_GetGlobalJointPosition();
    }

    public void send_GetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      GetGlobalJointPosition_args args = new GetGlobalJointPosition_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      sendBase("GetGlobalJointPosition", args);
    }

    public de.mosim.mmi.math.MVector3 recv_GetGlobalJointPosition() throws org.apache.thrift.TException
    {
      GetGlobalJointPosition_result result = new GetGlobalJointPosition_result();
      receiveBase(result, "GetGlobalJointPosition");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetGlobalJointPosition failed: unknown result");
    }

    public de.mosim.mmi.math.MQuaternion GetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      send_GetGlobalJointRotation(avatarId, joint);
      return recv_GetGlobalJointRotation();
    }

    public void send_GetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      GetGlobalJointRotation_args args = new GetGlobalJointRotation_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      sendBase("GetGlobalJointRotation", args);
    }

    public de.mosim.mmi.math.MQuaternion recv_GetGlobalJointRotation() throws org.apache.thrift.TException
    {
      GetGlobalJointRotation_result result = new GetGlobalJointRotation_result();
      receiveBase(result, "GetGlobalJointRotation");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetGlobalJointRotation failed: unknown result");
    }

    public de.mosim.mmi.math.MVector3 GetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      send_GetLocalJointPosition(avatarId, joint);
      return recv_GetLocalJointPosition();
    }

    public void send_GetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      GetLocalJointPosition_args args = new GetLocalJointPosition_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      sendBase("GetLocalJointPosition", args);
    }

    public de.mosim.mmi.math.MVector3 recv_GetLocalJointPosition() throws org.apache.thrift.TException
    {
      GetLocalJointPosition_result result = new GetLocalJointPosition_result();
      receiveBase(result, "GetLocalJointPosition");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetLocalJointPosition failed: unknown result");
    }

    public de.mosim.mmi.math.MQuaternion GetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      send_GetLocalJointRotation(avatarId, joint);
      return recv_GetLocalJointRotation();
    }

    public void send_GetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint) throws org.apache.thrift.TException
    {
      GetLocalJointRotation_args args = new GetLocalJointRotation_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      sendBase("GetLocalJointRotation", args);
    }

    public de.mosim.mmi.math.MQuaternion recv_GetLocalJointRotation() throws org.apache.thrift.TException
    {
      GetLocalJointRotation_result result = new GetLocalJointRotation_result();
      receiveBase(result, "GetLocalJointRotation");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "GetLocalJointRotation failed: unknown result");
    }

    public void SetRootPosition(java.lang.String avatarId, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException
    {
      send_SetRootPosition(avatarId, position);
      recv_SetRootPosition();
    }

    public void send_SetRootPosition(java.lang.String avatarId, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException
    {
      SetRootPosition_args args = new SetRootPosition_args();
      args.setAvatarId(avatarId);
      args.setPosition(position);
      sendBase("SetRootPosition", args);
    }

    public void recv_SetRootPosition() throws org.apache.thrift.TException
    {
      SetRootPosition_result result = new SetRootPosition_result();
      receiveBase(result, "SetRootPosition");
      return;
    }

    public void SetRootRotation(java.lang.String avatarId, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException
    {
      send_SetRootRotation(avatarId, rotation);
      recv_SetRootRotation();
    }

    public void send_SetRootRotation(java.lang.String avatarId, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException
    {
      SetRootRotation_args args = new SetRootRotation_args();
      args.setAvatarId(avatarId);
      args.setRotation(rotation);
      sendBase("SetRootRotation", args);
    }

    public void recv_SetRootRotation() throws org.apache.thrift.TException
    {
      SetRootRotation_result result = new SetRootRotation_result();
      receiveBase(result, "SetRootRotation");
      return;
    }

    public void SetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException
    {
      send_SetGlobalJointPosition(avatarId, joint, position);
      recv_SetGlobalJointPosition();
    }

    public void send_SetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException
    {
      SetGlobalJointPosition_args args = new SetGlobalJointPosition_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      args.setPosition(position);
      sendBase("SetGlobalJointPosition", args);
    }

    public void recv_SetGlobalJointPosition() throws org.apache.thrift.TException
    {
      SetGlobalJointPosition_result result = new SetGlobalJointPosition_result();
      receiveBase(result, "SetGlobalJointPosition");
      return;
    }

    public void SetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException
    {
      send_SetGlobalJointRotation(avatarId, joint, rotation);
      recv_SetGlobalJointRotation();
    }

    public void send_SetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException
    {
      SetGlobalJointRotation_args args = new SetGlobalJointRotation_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      args.setRotation(rotation);
      sendBase("SetGlobalJointRotation", args);
    }

    public void recv_SetGlobalJointRotation() throws org.apache.thrift.TException
    {
      SetGlobalJointRotation_result result = new SetGlobalJointRotation_result();
      receiveBase(result, "SetGlobalJointRotation");
      return;
    }

    public void SetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException
    {
      send_SetLocalJointPosition(avatarId, joint, position);
      recv_SetLocalJointPosition();
    }

    public void send_SetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position) throws org.apache.thrift.TException
    {
      SetLocalJointPosition_args args = new SetLocalJointPosition_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      args.setPosition(position);
      sendBase("SetLocalJointPosition", args);
    }

    public void recv_SetLocalJointPosition() throws org.apache.thrift.TException
    {
      SetLocalJointPosition_result result = new SetLocalJointPosition_result();
      receiveBase(result, "SetLocalJointPosition");
      return;
    }

    public void SetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException
    {
      send_SetLocalJointRotation(avatarId, joint, rotation);
      recv_SetLocalJointRotation();
    }

    public void send_SetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation) throws org.apache.thrift.TException
    {
      SetLocalJointRotation_args args = new SetLocalJointRotation_args();
      args.setAvatarId(avatarId);
      args.setJoint(joint);
      args.setRotation(rotation);
      sendBase("SetLocalJointRotation", args);
    }

    public void recv_SetLocalJointRotation() throws org.apache.thrift.TException
    {
      SetLocalJointRotation_result result = new SetLocalJointRotation_result();
      receiveBase(result, "SetLocalJointRotation");
      return;
    }

    public de.mosim.mmi.avatar.MAvatarPostureValues RecomputeCurrentPostureValues(java.lang.String avatarId) throws org.apache.thrift.TException
    {
      send_RecomputeCurrentPostureValues(avatarId);
      return recv_RecomputeCurrentPostureValues();
    }

    public void send_RecomputeCurrentPostureValues(java.lang.String avatarId) throws org.apache.thrift.TException
    {
      RecomputeCurrentPostureValues_args args = new RecomputeCurrentPostureValues_args();
      args.setAvatarId(avatarId);
      sendBase("RecomputeCurrentPostureValues", args);
    }

    public de.mosim.mmi.avatar.MAvatarPostureValues recv_RecomputeCurrentPostureValues() throws org.apache.thrift.TException
    {
      RecomputeCurrentPostureValues_result result = new RecomputeCurrentPostureValues_result();
      receiveBase(result, "RecomputeCurrentPostureValues");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "RecomputeCurrentPostureValues failed: unknown result");
    }

  }
  public static class AsyncClient extends MMIServiceBase.AsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void InitializeAnthropometry(de.mosim.mmi.avatar.MAvatarDescription description, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      InitializeAnthropometry_call method_call = new InitializeAnthropometry_call(description, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class InitializeAnthropometry_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private de.mosim.mmi.avatar.MAvatarDescription description;
      public InitializeAnthropometry_call(de.mosim.mmi.avatar.MAvatarDescription description, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.description = description;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("InitializeAnthropometry", org.apache.thrift.protocol.TMessageType.CALL, 0));
        InitializeAnthropometry_args args = new InitializeAnthropometry_args();
        args.setDescription(description);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void GetAvatarDescription(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarDescription> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetAvatarDescription_call method_call = new GetAvatarDescription_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetAvatarDescription_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.avatar.MAvatarDescription> {
      private java.lang.String avatarID;
      public GetAvatarDescription_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarDescription> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetAvatarDescription", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetAvatarDescription_args args = new GetAvatarDescription_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.avatar.MAvatarDescription getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetAvatarDescription();
      }
    }

    public void SetAnimatedJoints(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetAnimatedJoints_call method_call = new SetAnimatedJoints_call(avatarID, joints, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetAnimatedJoints_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarID;
      private java.util.List<de.mosim.mmi.avatar.MJointType> joints;
      public SetAnimatedJoints_call(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
        this.joints = joints;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetAnimatedJoints", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetAnimatedJoints_args args = new SetAnimatedJoints_args();
        args.setAvatarID(avatarID);
        args.setJoints(joints);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void SetChannelData(de.mosim.mmi.avatar.MAvatarPostureValues values, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetChannelData_call method_call = new SetChannelData_call(values, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetChannelData_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private de.mosim.mmi.avatar.MAvatarPostureValues values;
      public SetChannelData_call(de.mosim.mmi.avatar.MAvatarPostureValues values, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.values = values;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetChannelData", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetChannelData_args args = new SetChannelData_args();
        args.setValues(values);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void GetCurrentGlobalPosture(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetCurrentGlobalPosture_call method_call = new GetCurrentGlobalPosture_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetCurrentGlobalPosture_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.avatar.MAvatarPosture> {
      private java.lang.String avatarID;
      public GetCurrentGlobalPosture_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetCurrentGlobalPosture", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetCurrentGlobalPosture_args args = new GetCurrentGlobalPosture_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.avatar.MAvatarPosture getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetCurrentGlobalPosture();
      }
    }

    public void GetCurrentLocalPosture(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetCurrentLocalPosture_call method_call = new GetCurrentLocalPosture_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetCurrentLocalPosture_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.avatar.MAvatarPosture> {
      private java.lang.String avatarID;
      public GetCurrentLocalPosture_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetCurrentLocalPosture", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetCurrentLocalPosture_args args = new GetCurrentLocalPosture_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.avatar.MAvatarPosture getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetCurrentLocalPosture();
      }
    }

    public void GetCurrentPostureValues(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetCurrentPostureValues_call method_call = new GetCurrentPostureValues_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetCurrentPostureValues_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.avatar.MAvatarPostureValues> {
      private java.lang.String avatarID;
      public GetCurrentPostureValues_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetCurrentPostureValues", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetCurrentPostureValues_args args = new GetCurrentPostureValues_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.avatar.MAvatarPostureValues getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetCurrentPostureValues();
      }
    }

    public void GetCurrentPostureValuesPartial(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetCurrentPostureValuesPartial_call method_call = new GetCurrentPostureValuesPartial_call(avatarID, joints, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetCurrentPostureValuesPartial_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.avatar.MAvatarPostureValues> {
      private java.lang.String avatarID;
      private java.util.List<de.mosim.mmi.avatar.MJointType> joints;
      public GetCurrentPostureValuesPartial_call(java.lang.String avatarID, java.util.List<de.mosim.mmi.avatar.MJointType> joints, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
        this.joints = joints;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetCurrentPostureValuesPartial", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetCurrentPostureValuesPartial_args args = new GetCurrentPostureValuesPartial_args();
        args.setAvatarID(avatarID);
        args.setJoints(joints);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.avatar.MAvatarPostureValues getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetCurrentPostureValuesPartial();
      }
    }

    public void GetCurrentJointPositions(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.math.MVector3>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetCurrentJointPositions_call method_call = new GetCurrentJointPositions_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetCurrentJointPositions_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<de.mosim.mmi.math.MVector3>> {
      private java.lang.String avatarID;
      public GetCurrentJointPositions_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.math.MVector3>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetCurrentJointPositions", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetCurrentJointPositions_args args = new GetCurrentJointPositions_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<de.mosim.mmi.math.MVector3> getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetCurrentJointPositions();
      }
    }

    public void GetRootPosition(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetRootPosition_call method_call = new GetRootPosition_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetRootPosition_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.math.MVector3> {
      private java.lang.String avatarID;
      public GetRootPosition_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetRootPosition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetRootPosition_args args = new GetRootPosition_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.math.MVector3 getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetRootPosition();
      }
    }

    public void GetRootRotation(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetRootRotation_call method_call = new GetRootRotation_call(avatarID, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetRootRotation_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.math.MQuaternion> {
      private java.lang.String avatarID;
      public GetRootRotation_call(java.lang.String avatarID, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarID = avatarID;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetRootRotation", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetRootRotation_args args = new GetRootRotation_args();
        args.setAvatarID(avatarID);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.math.MQuaternion getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetRootRotation();
      }
    }

    public void GetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetGlobalJointPosition_call method_call = new GetGlobalJointPosition_call(avatarId, joint, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetGlobalJointPosition_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.math.MVector3> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      public GetGlobalJointPosition_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetGlobalJointPosition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetGlobalJointPosition_args args = new GetGlobalJointPosition_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.math.MVector3 getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetGlobalJointPosition();
      }
    }

    public void GetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetGlobalJointRotation_call method_call = new GetGlobalJointRotation_call(avatarId, joint, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetGlobalJointRotation_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.math.MQuaternion> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      public GetGlobalJointRotation_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetGlobalJointRotation", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetGlobalJointRotation_args args = new GetGlobalJointRotation_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.math.MQuaternion getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetGlobalJointRotation();
      }
    }

    public void GetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetLocalJointPosition_call method_call = new GetLocalJointPosition_call(avatarId, joint, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetLocalJointPosition_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.math.MVector3> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      public GetLocalJointPosition_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetLocalJointPosition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetLocalJointPosition_args args = new GetLocalJointPosition_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.math.MVector3 getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetLocalJointPosition();
      }
    }

    public void GetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      GetLocalJointRotation_call method_call = new GetLocalJointRotation_call(avatarId, joint, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class GetLocalJointRotation_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.math.MQuaternion> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      public GetLocalJointRotation_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("GetLocalJointRotation", org.apache.thrift.protocol.TMessageType.CALL, 0));
        GetLocalJointRotation_args args = new GetLocalJointRotation_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.math.MQuaternion getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_GetLocalJointRotation();
      }
    }

    public void SetRootPosition(java.lang.String avatarId, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetRootPosition_call method_call = new SetRootPosition_call(avatarId, position, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetRootPosition_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarId;
      private de.mosim.mmi.math.MVector3 position;
      public SetRootPosition_call(java.lang.String avatarId, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.position = position;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetRootPosition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetRootPosition_args args = new SetRootPosition_args();
        args.setAvatarId(avatarId);
        args.setPosition(position);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void SetRootRotation(java.lang.String avatarId, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetRootRotation_call method_call = new SetRootRotation_call(avatarId, rotation, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetRootRotation_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarId;
      private de.mosim.mmi.math.MQuaternion rotation;
      public SetRootRotation_call(java.lang.String avatarId, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.rotation = rotation;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetRootRotation", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetRootRotation_args args = new SetRootRotation_args();
        args.setAvatarId(avatarId);
        args.setRotation(rotation);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void SetGlobalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetGlobalJointPosition_call method_call = new SetGlobalJointPosition_call(avatarId, joint, position, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetGlobalJointPosition_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      private de.mosim.mmi.math.MVector3 position;
      public SetGlobalJointPosition_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
        this.position = position;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetGlobalJointPosition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetGlobalJointPosition_args args = new SetGlobalJointPosition_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.setPosition(position);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void SetGlobalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetGlobalJointRotation_call method_call = new SetGlobalJointRotation_call(avatarId, joint, rotation, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetGlobalJointRotation_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      private de.mosim.mmi.math.MQuaternion rotation;
      public SetGlobalJointRotation_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
        this.rotation = rotation;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetGlobalJointRotation", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetGlobalJointRotation_args args = new SetGlobalJointRotation_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.setRotation(rotation);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void SetLocalJointPosition(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetLocalJointPosition_call method_call = new SetLocalJointPosition_call(avatarId, joint, position, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetLocalJointPosition_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      private de.mosim.mmi.math.MVector3 position;
      public SetLocalJointPosition_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MVector3 position, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
        this.position = position;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetLocalJointPosition", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetLocalJointPosition_args args = new SetLocalJointPosition_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.setPosition(position);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void SetLocalJointRotation(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      SetLocalJointRotation_call method_call = new SetLocalJointRotation_call(avatarId, joint, rotation, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class SetLocalJointRotation_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String avatarId;
      private de.mosim.mmi.avatar.MJointType joint;
      private de.mosim.mmi.math.MQuaternion rotation;
      public SetLocalJointRotation_call(java.lang.String avatarId, de.mosim.mmi.avatar.MJointType joint, de.mosim.mmi.math.MQuaternion rotation, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
        this.joint = joint;
        this.rotation = rotation;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("SetLocalJointRotation", org.apache.thrift.protocol.TMessageType.CALL, 0));
        SetLocalJointRotation_args args = new SetLocalJointRotation_args();
        args.setAvatarId(avatarId);
        args.setJoint(joint);
        args.setRotation(rotation);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void RecomputeCurrentPostureValues(java.lang.String avatarId, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      RecomputeCurrentPostureValues_call method_call = new RecomputeCurrentPostureValues_call(avatarId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class RecomputeCurrentPostureValues_call extends org.apache.thrift.async.TAsyncMethodCall<de.mosim.mmi.avatar.MAvatarPostureValues> {
      private java.lang.String avatarId;
      public RecomputeCurrentPostureValues_call(java.lang.String avatarId, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.avatarId = avatarId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("RecomputeCurrentPostureValues", org.apache.thrift.protocol.TMessageType.CALL, 0));
        RecomputeCurrentPostureValues_args args = new RecomputeCurrentPostureValues_args();
        args.setAvatarId(avatarId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public de.mosim.mmi.avatar.MAvatarPostureValues getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_RecomputeCurrentPostureValues();
      }
    }

  }

  public static class Processor<I extends Iface> extends MMIServiceBase.Processor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("InitializeAnthropometry", new InitializeAnthropometry());
      processMap.put("GetAvatarDescription", new GetAvatarDescription());
      processMap.put("SetAnimatedJoints", new SetAnimatedJoints());
      processMap.put("SetChannelData", new SetChannelData());
      processMap.put("GetCurrentGlobalPosture", new GetCurrentGlobalPosture());
      processMap.put("GetCurrentLocalPosture", new GetCurrentLocalPosture());
      processMap.put("GetCurrentPostureValues", new GetCurrentPostureValues());
      processMap.put("GetCurrentPostureValuesPartial", new GetCurrentPostureValuesPartial());
      processMap.put("GetCurrentJointPositions", new GetCurrentJointPositions());
      processMap.put("GetRootPosition", new GetRootPosition());
      processMap.put("GetRootRotation", new GetRootRotation());
      processMap.put("GetGlobalJointPosition", new GetGlobalJointPosition());
      processMap.put("GetGlobalJointRotation", new GetGlobalJointRotation());
      processMap.put("GetLocalJointPosition", new GetLocalJointPosition());
      processMap.put("GetLocalJointRotation", new GetLocalJointRotation());
      processMap.put("SetRootPosition", new SetRootPosition());
      processMap.put("SetRootRotation", new SetRootRotation());
      processMap.put("SetGlobalJointPosition", new SetGlobalJointPosition());
      processMap.put("SetGlobalJointRotation", new SetGlobalJointRotation());
      processMap.put("SetLocalJointPosition", new SetLocalJointPosition());
      processMap.put("SetLocalJointRotation", new SetLocalJointRotation());
      processMap.put("RecomputeCurrentPostureValues", new RecomputeCurrentPostureValues());
      return processMap;
    }

    public static class InitializeAnthropometry<I extends Iface> extends org.apache.thrift.ProcessFunction<I, InitializeAnthropometry_args> {
      public InitializeAnthropometry() {
        super("InitializeAnthropometry");
      }

      public InitializeAnthropometry_args getEmptyArgsInstance() {
        return new InitializeAnthropometry_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public InitializeAnthropometry_result getResult(I iface, InitializeAnthropometry_args args) throws org.apache.thrift.TException {
        InitializeAnthropometry_result result = new InitializeAnthropometry_result();
        iface.InitializeAnthropometry(args.description);
        return result;
      }
    }

    public static class GetAvatarDescription<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetAvatarDescription_args> {
      public GetAvatarDescription() {
        super("GetAvatarDescription");
      }

      public GetAvatarDescription_args getEmptyArgsInstance() {
        return new GetAvatarDescription_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetAvatarDescription_result getResult(I iface, GetAvatarDescription_args args) throws org.apache.thrift.TException {
        GetAvatarDescription_result result = new GetAvatarDescription_result();
        result.success = iface.GetAvatarDescription(args.avatarID);
        return result;
      }
    }

    public static class SetAnimatedJoints<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetAnimatedJoints_args> {
      public SetAnimatedJoints() {
        super("SetAnimatedJoints");
      }

      public SetAnimatedJoints_args getEmptyArgsInstance() {
        return new SetAnimatedJoints_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetAnimatedJoints_result getResult(I iface, SetAnimatedJoints_args args) throws org.apache.thrift.TException {
        SetAnimatedJoints_result result = new SetAnimatedJoints_result();
        iface.SetAnimatedJoints(args.avatarID, args.joints);
        return result;
      }
    }

    public static class SetChannelData<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetChannelData_args> {
      public SetChannelData() {
        super("SetChannelData");
      }

      public SetChannelData_args getEmptyArgsInstance() {
        return new SetChannelData_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetChannelData_result getResult(I iface, SetChannelData_args args) throws org.apache.thrift.TException {
        SetChannelData_result result = new SetChannelData_result();
        iface.SetChannelData(args.values);
        return result;
      }
    }

    public static class GetCurrentGlobalPosture<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetCurrentGlobalPosture_args> {
      public GetCurrentGlobalPosture() {
        super("GetCurrentGlobalPosture");
      }

      public GetCurrentGlobalPosture_args getEmptyArgsInstance() {
        return new GetCurrentGlobalPosture_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetCurrentGlobalPosture_result getResult(I iface, GetCurrentGlobalPosture_args args) throws org.apache.thrift.TException {
        GetCurrentGlobalPosture_result result = new GetCurrentGlobalPosture_result();
        result.success = iface.GetCurrentGlobalPosture(args.avatarID);
        return result;
      }
    }

    public static class GetCurrentLocalPosture<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetCurrentLocalPosture_args> {
      public GetCurrentLocalPosture() {
        super("GetCurrentLocalPosture");
      }

      public GetCurrentLocalPosture_args getEmptyArgsInstance() {
        return new GetCurrentLocalPosture_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetCurrentLocalPosture_result getResult(I iface, GetCurrentLocalPosture_args args) throws org.apache.thrift.TException {
        GetCurrentLocalPosture_result result = new GetCurrentLocalPosture_result();
        result.success = iface.GetCurrentLocalPosture(args.avatarID);
        return result;
      }
    }

    public static class GetCurrentPostureValues<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetCurrentPostureValues_args> {
      public GetCurrentPostureValues() {
        super("GetCurrentPostureValues");
      }

      public GetCurrentPostureValues_args getEmptyArgsInstance() {
        return new GetCurrentPostureValues_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetCurrentPostureValues_result getResult(I iface, GetCurrentPostureValues_args args) throws org.apache.thrift.TException {
        GetCurrentPostureValues_result result = new GetCurrentPostureValues_result();
        result.success = iface.GetCurrentPostureValues(args.avatarID);
        return result;
      }
    }

    public static class GetCurrentPostureValuesPartial<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetCurrentPostureValuesPartial_args> {
      public GetCurrentPostureValuesPartial() {
        super("GetCurrentPostureValuesPartial");
      }

      public GetCurrentPostureValuesPartial_args getEmptyArgsInstance() {
        return new GetCurrentPostureValuesPartial_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetCurrentPostureValuesPartial_result getResult(I iface, GetCurrentPostureValuesPartial_args args) throws org.apache.thrift.TException {
        GetCurrentPostureValuesPartial_result result = new GetCurrentPostureValuesPartial_result();
        result.success = iface.GetCurrentPostureValuesPartial(args.avatarID, args.joints);
        return result;
      }
    }

    public static class GetCurrentJointPositions<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetCurrentJointPositions_args> {
      public GetCurrentJointPositions() {
        super("GetCurrentJointPositions");
      }

      public GetCurrentJointPositions_args getEmptyArgsInstance() {
        return new GetCurrentJointPositions_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetCurrentJointPositions_result getResult(I iface, GetCurrentJointPositions_args args) throws org.apache.thrift.TException {
        GetCurrentJointPositions_result result = new GetCurrentJointPositions_result();
        result.success = iface.GetCurrentJointPositions(args.avatarID);
        return result;
      }
    }

    public static class GetRootPosition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetRootPosition_args> {
      public GetRootPosition() {
        super("GetRootPosition");
      }

      public GetRootPosition_args getEmptyArgsInstance() {
        return new GetRootPosition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetRootPosition_result getResult(I iface, GetRootPosition_args args) throws org.apache.thrift.TException {
        GetRootPosition_result result = new GetRootPosition_result();
        result.success = iface.GetRootPosition(args.avatarID);
        return result;
      }
    }

    public static class GetRootRotation<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetRootRotation_args> {
      public GetRootRotation() {
        super("GetRootRotation");
      }

      public GetRootRotation_args getEmptyArgsInstance() {
        return new GetRootRotation_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetRootRotation_result getResult(I iface, GetRootRotation_args args) throws org.apache.thrift.TException {
        GetRootRotation_result result = new GetRootRotation_result();
        result.success = iface.GetRootRotation(args.avatarID);
        return result;
      }
    }

    public static class GetGlobalJointPosition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetGlobalJointPosition_args> {
      public GetGlobalJointPosition() {
        super("GetGlobalJointPosition");
      }

      public GetGlobalJointPosition_args getEmptyArgsInstance() {
        return new GetGlobalJointPosition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetGlobalJointPosition_result getResult(I iface, GetGlobalJointPosition_args args) throws org.apache.thrift.TException {
        GetGlobalJointPosition_result result = new GetGlobalJointPosition_result();
        result.success = iface.GetGlobalJointPosition(args.avatarId, args.joint);
        return result;
      }
    }

    public static class GetGlobalJointRotation<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetGlobalJointRotation_args> {
      public GetGlobalJointRotation() {
        super("GetGlobalJointRotation");
      }

      public GetGlobalJointRotation_args getEmptyArgsInstance() {
        return new GetGlobalJointRotation_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetGlobalJointRotation_result getResult(I iface, GetGlobalJointRotation_args args) throws org.apache.thrift.TException {
        GetGlobalJointRotation_result result = new GetGlobalJointRotation_result();
        result.success = iface.GetGlobalJointRotation(args.avatarId, args.joint);
        return result;
      }
    }

    public static class GetLocalJointPosition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetLocalJointPosition_args> {
      public GetLocalJointPosition() {
        super("GetLocalJointPosition");
      }

      public GetLocalJointPosition_args getEmptyArgsInstance() {
        return new GetLocalJointPosition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetLocalJointPosition_result getResult(I iface, GetLocalJointPosition_args args) throws org.apache.thrift.TException {
        GetLocalJointPosition_result result = new GetLocalJointPosition_result();
        result.success = iface.GetLocalJointPosition(args.avatarId, args.joint);
        return result;
      }
    }

    public static class GetLocalJointRotation<I extends Iface> extends org.apache.thrift.ProcessFunction<I, GetLocalJointRotation_args> {
      public GetLocalJointRotation() {
        super("GetLocalJointRotation");
      }

      public GetLocalJointRotation_args getEmptyArgsInstance() {
        return new GetLocalJointRotation_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public GetLocalJointRotation_result getResult(I iface, GetLocalJointRotation_args args) throws org.apache.thrift.TException {
        GetLocalJointRotation_result result = new GetLocalJointRotation_result();
        result.success = iface.GetLocalJointRotation(args.avatarId, args.joint);
        return result;
      }
    }

    public static class SetRootPosition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetRootPosition_args> {
      public SetRootPosition() {
        super("SetRootPosition");
      }

      public SetRootPosition_args getEmptyArgsInstance() {
        return new SetRootPosition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetRootPosition_result getResult(I iface, SetRootPosition_args args) throws org.apache.thrift.TException {
        SetRootPosition_result result = new SetRootPosition_result();
        iface.SetRootPosition(args.avatarId, args.position);
        return result;
      }
    }

    public static class SetRootRotation<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetRootRotation_args> {
      public SetRootRotation() {
        super("SetRootRotation");
      }

      public SetRootRotation_args getEmptyArgsInstance() {
        return new SetRootRotation_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetRootRotation_result getResult(I iface, SetRootRotation_args args) throws org.apache.thrift.TException {
        SetRootRotation_result result = new SetRootRotation_result();
        iface.SetRootRotation(args.avatarId, args.rotation);
        return result;
      }
    }

    public static class SetGlobalJointPosition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetGlobalJointPosition_args> {
      public SetGlobalJointPosition() {
        super("SetGlobalJointPosition");
      }

      public SetGlobalJointPosition_args getEmptyArgsInstance() {
        return new SetGlobalJointPosition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetGlobalJointPosition_result getResult(I iface, SetGlobalJointPosition_args args) throws org.apache.thrift.TException {
        SetGlobalJointPosition_result result = new SetGlobalJointPosition_result();
        iface.SetGlobalJointPosition(args.avatarId, args.joint, args.position);
        return result;
      }
    }

    public static class SetGlobalJointRotation<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetGlobalJointRotation_args> {
      public SetGlobalJointRotation() {
        super("SetGlobalJointRotation");
      }

      public SetGlobalJointRotation_args getEmptyArgsInstance() {
        return new SetGlobalJointRotation_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetGlobalJointRotation_result getResult(I iface, SetGlobalJointRotation_args args) throws org.apache.thrift.TException {
        SetGlobalJointRotation_result result = new SetGlobalJointRotation_result();
        iface.SetGlobalJointRotation(args.avatarId, args.joint, args.rotation);
        return result;
      }
    }

    public static class SetLocalJointPosition<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetLocalJointPosition_args> {
      public SetLocalJointPosition() {
        super("SetLocalJointPosition");
      }

      public SetLocalJointPosition_args getEmptyArgsInstance() {
        return new SetLocalJointPosition_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetLocalJointPosition_result getResult(I iface, SetLocalJointPosition_args args) throws org.apache.thrift.TException {
        SetLocalJointPosition_result result = new SetLocalJointPosition_result();
        iface.SetLocalJointPosition(args.avatarId, args.joint, args.position);
        return result;
      }
    }

    public static class SetLocalJointRotation<I extends Iface> extends org.apache.thrift.ProcessFunction<I, SetLocalJointRotation_args> {
      public SetLocalJointRotation() {
        super("SetLocalJointRotation");
      }

      public SetLocalJointRotation_args getEmptyArgsInstance() {
        return new SetLocalJointRotation_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public SetLocalJointRotation_result getResult(I iface, SetLocalJointRotation_args args) throws org.apache.thrift.TException {
        SetLocalJointRotation_result result = new SetLocalJointRotation_result();
        iface.SetLocalJointRotation(args.avatarId, args.joint, args.rotation);
        return result;
      }
    }

    public static class RecomputeCurrentPostureValues<I extends Iface> extends org.apache.thrift.ProcessFunction<I, RecomputeCurrentPostureValues_args> {
      public RecomputeCurrentPostureValues() {
        super("RecomputeCurrentPostureValues");
      }

      public RecomputeCurrentPostureValues_args getEmptyArgsInstance() {
        return new RecomputeCurrentPostureValues_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean rethrowUnhandledExceptions() {
        return false;
      }

      public RecomputeCurrentPostureValues_result getResult(I iface, RecomputeCurrentPostureValues_args args) throws org.apache.thrift.TException {
        RecomputeCurrentPostureValues_result result = new RecomputeCurrentPostureValues_result();
        result.success = iface.RecomputeCurrentPostureValues(args.avatarId);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends MMIServiceBase.AsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("InitializeAnthropometry", new InitializeAnthropometry());
      processMap.put("GetAvatarDescription", new GetAvatarDescription());
      processMap.put("SetAnimatedJoints", new SetAnimatedJoints());
      processMap.put("SetChannelData", new SetChannelData());
      processMap.put("GetCurrentGlobalPosture", new GetCurrentGlobalPosture());
      processMap.put("GetCurrentLocalPosture", new GetCurrentLocalPosture());
      processMap.put("GetCurrentPostureValues", new GetCurrentPostureValues());
      processMap.put("GetCurrentPostureValuesPartial", new GetCurrentPostureValuesPartial());
      processMap.put("GetCurrentJointPositions", new GetCurrentJointPositions());
      processMap.put("GetRootPosition", new GetRootPosition());
      processMap.put("GetRootRotation", new GetRootRotation());
      processMap.put("GetGlobalJointPosition", new GetGlobalJointPosition());
      processMap.put("GetGlobalJointRotation", new GetGlobalJointRotation());
      processMap.put("GetLocalJointPosition", new GetLocalJointPosition());
      processMap.put("GetLocalJointRotation", new GetLocalJointRotation());
      processMap.put("SetRootPosition", new SetRootPosition());
      processMap.put("SetRootRotation", new SetRootRotation());
      processMap.put("SetGlobalJointPosition", new SetGlobalJointPosition());
      processMap.put("SetGlobalJointRotation", new SetGlobalJointRotation());
      processMap.put("SetLocalJointPosition", new SetLocalJointPosition());
      processMap.put("SetLocalJointRotation", new SetLocalJointRotation());
      processMap.put("RecomputeCurrentPostureValues", new RecomputeCurrentPostureValues());
      return processMap;
    }

    public static class InitializeAnthropometry<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, InitializeAnthropometry_args, Void> {
      public InitializeAnthropometry() {
        super("InitializeAnthropometry");
      }

      public InitializeAnthropometry_args getEmptyArgsInstance() {
        return new InitializeAnthropometry_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            InitializeAnthropometry_result result = new InitializeAnthropometry_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            InitializeAnthropometry_result result = new InitializeAnthropometry_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, InitializeAnthropometry_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.InitializeAnthropometry(args.description,resultHandler);
      }
    }

    public static class GetAvatarDescription<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetAvatarDescription_args, de.mosim.mmi.avatar.MAvatarDescription> {
      public GetAvatarDescription() {
        super("GetAvatarDescription");
      }

      public GetAvatarDescription_args getEmptyArgsInstance() {
        return new GetAvatarDescription_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarDescription> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarDescription>() { 
          public void onComplete(de.mosim.mmi.avatar.MAvatarDescription o) {
            GetAvatarDescription_result result = new GetAvatarDescription_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetAvatarDescription_result result = new GetAvatarDescription_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetAvatarDescription_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarDescription> resultHandler) throws org.apache.thrift.TException {
        iface.GetAvatarDescription(args.avatarID,resultHandler);
      }
    }

    public static class SetAnimatedJoints<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetAnimatedJoints_args, Void> {
      public SetAnimatedJoints() {
        super("SetAnimatedJoints");
      }

      public SetAnimatedJoints_args getEmptyArgsInstance() {
        return new SetAnimatedJoints_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetAnimatedJoints_result result = new SetAnimatedJoints_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetAnimatedJoints_result result = new SetAnimatedJoints_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetAnimatedJoints_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetAnimatedJoints(args.avatarID, args.joints,resultHandler);
      }
    }

    public static class SetChannelData<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetChannelData_args, Void> {
      public SetChannelData() {
        super("SetChannelData");
      }

      public SetChannelData_args getEmptyArgsInstance() {
        return new SetChannelData_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetChannelData_result result = new SetChannelData_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetChannelData_result result = new SetChannelData_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetChannelData_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetChannelData(args.values,resultHandler);
      }
    }

    public static class GetCurrentGlobalPosture<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetCurrentGlobalPosture_args, de.mosim.mmi.avatar.MAvatarPosture> {
      public GetCurrentGlobalPosture() {
        super("GetCurrentGlobalPosture");
      }

      public GetCurrentGlobalPosture_args getEmptyArgsInstance() {
        return new GetCurrentGlobalPosture_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture>() { 
          public void onComplete(de.mosim.mmi.avatar.MAvatarPosture o) {
            GetCurrentGlobalPosture_result result = new GetCurrentGlobalPosture_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetCurrentGlobalPosture_result result = new GetCurrentGlobalPosture_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetCurrentGlobalPosture_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler) throws org.apache.thrift.TException {
        iface.GetCurrentGlobalPosture(args.avatarID,resultHandler);
      }
    }

    public static class GetCurrentLocalPosture<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetCurrentLocalPosture_args, de.mosim.mmi.avatar.MAvatarPosture> {
      public GetCurrentLocalPosture() {
        super("GetCurrentLocalPosture");
      }

      public GetCurrentLocalPosture_args getEmptyArgsInstance() {
        return new GetCurrentLocalPosture_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture>() { 
          public void onComplete(de.mosim.mmi.avatar.MAvatarPosture o) {
            GetCurrentLocalPosture_result result = new GetCurrentLocalPosture_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetCurrentLocalPosture_result result = new GetCurrentLocalPosture_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetCurrentLocalPosture_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPosture> resultHandler) throws org.apache.thrift.TException {
        iface.GetCurrentLocalPosture(args.avatarID,resultHandler);
      }
    }

    public static class GetCurrentPostureValues<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetCurrentPostureValues_args, de.mosim.mmi.avatar.MAvatarPostureValues> {
      public GetCurrentPostureValues() {
        super("GetCurrentPostureValues");
      }

      public GetCurrentPostureValues_args getEmptyArgsInstance() {
        return new GetCurrentPostureValues_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues>() { 
          public void onComplete(de.mosim.mmi.avatar.MAvatarPostureValues o) {
            GetCurrentPostureValues_result result = new GetCurrentPostureValues_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetCurrentPostureValues_result result = new GetCurrentPostureValues_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetCurrentPostureValues_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
        iface.GetCurrentPostureValues(args.avatarID,resultHandler);
      }
    }

    public static class GetCurrentPostureValuesPartial<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetCurrentPostureValuesPartial_args, de.mosim.mmi.avatar.MAvatarPostureValues> {
      public GetCurrentPostureValuesPartial() {
        super("GetCurrentPostureValuesPartial");
      }

      public GetCurrentPostureValuesPartial_args getEmptyArgsInstance() {
        return new GetCurrentPostureValuesPartial_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues>() { 
          public void onComplete(de.mosim.mmi.avatar.MAvatarPostureValues o) {
            GetCurrentPostureValuesPartial_result result = new GetCurrentPostureValuesPartial_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetCurrentPostureValuesPartial_result result = new GetCurrentPostureValuesPartial_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetCurrentPostureValuesPartial_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
        iface.GetCurrentPostureValuesPartial(args.avatarID, args.joints,resultHandler);
      }
    }

    public static class GetCurrentJointPositions<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetCurrentJointPositions_args, java.util.List<de.mosim.mmi.math.MVector3>> {
      public GetCurrentJointPositions() {
        super("GetCurrentJointPositions");
      }

      public GetCurrentJointPositions_args getEmptyArgsInstance() {
        return new GetCurrentJointPositions_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.math.MVector3>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.math.MVector3>>() { 
          public void onComplete(java.util.List<de.mosim.mmi.math.MVector3> o) {
            GetCurrentJointPositions_result result = new GetCurrentJointPositions_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetCurrentJointPositions_result result = new GetCurrentJointPositions_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetCurrentJointPositions_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<de.mosim.mmi.math.MVector3>> resultHandler) throws org.apache.thrift.TException {
        iface.GetCurrentJointPositions(args.avatarID,resultHandler);
      }
    }

    public static class GetRootPosition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetRootPosition_args, de.mosim.mmi.math.MVector3> {
      public GetRootPosition() {
        super("GetRootPosition");
      }

      public GetRootPosition_args getEmptyArgsInstance() {
        return new GetRootPosition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3>() { 
          public void onComplete(de.mosim.mmi.math.MVector3 o) {
            GetRootPosition_result result = new GetRootPosition_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetRootPosition_result result = new GetRootPosition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetRootPosition_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException {
        iface.GetRootPosition(args.avatarID,resultHandler);
      }
    }

    public static class GetRootRotation<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetRootRotation_args, de.mosim.mmi.math.MQuaternion> {
      public GetRootRotation() {
        super("GetRootRotation");
      }

      public GetRootRotation_args getEmptyArgsInstance() {
        return new GetRootRotation_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion>() { 
          public void onComplete(de.mosim.mmi.math.MQuaternion o) {
            GetRootRotation_result result = new GetRootRotation_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetRootRotation_result result = new GetRootRotation_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetRootRotation_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException {
        iface.GetRootRotation(args.avatarID,resultHandler);
      }
    }

    public static class GetGlobalJointPosition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetGlobalJointPosition_args, de.mosim.mmi.math.MVector3> {
      public GetGlobalJointPosition() {
        super("GetGlobalJointPosition");
      }

      public GetGlobalJointPosition_args getEmptyArgsInstance() {
        return new GetGlobalJointPosition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3>() { 
          public void onComplete(de.mosim.mmi.math.MVector3 o) {
            GetGlobalJointPosition_result result = new GetGlobalJointPosition_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetGlobalJointPosition_result result = new GetGlobalJointPosition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetGlobalJointPosition_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException {
        iface.GetGlobalJointPosition(args.avatarId, args.joint,resultHandler);
      }
    }

    public static class GetGlobalJointRotation<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetGlobalJointRotation_args, de.mosim.mmi.math.MQuaternion> {
      public GetGlobalJointRotation() {
        super("GetGlobalJointRotation");
      }

      public GetGlobalJointRotation_args getEmptyArgsInstance() {
        return new GetGlobalJointRotation_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion>() { 
          public void onComplete(de.mosim.mmi.math.MQuaternion o) {
            GetGlobalJointRotation_result result = new GetGlobalJointRotation_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetGlobalJointRotation_result result = new GetGlobalJointRotation_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetGlobalJointRotation_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException {
        iface.GetGlobalJointRotation(args.avatarId, args.joint,resultHandler);
      }
    }

    public static class GetLocalJointPosition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetLocalJointPosition_args, de.mosim.mmi.math.MVector3> {
      public GetLocalJointPosition() {
        super("GetLocalJointPosition");
      }

      public GetLocalJointPosition_args getEmptyArgsInstance() {
        return new GetLocalJointPosition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3>() { 
          public void onComplete(de.mosim.mmi.math.MVector3 o) {
            GetLocalJointPosition_result result = new GetLocalJointPosition_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetLocalJointPosition_result result = new GetLocalJointPosition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetLocalJointPosition_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MVector3> resultHandler) throws org.apache.thrift.TException {
        iface.GetLocalJointPosition(args.avatarId, args.joint,resultHandler);
      }
    }

    public static class GetLocalJointRotation<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, GetLocalJointRotation_args, de.mosim.mmi.math.MQuaternion> {
      public GetLocalJointRotation() {
        super("GetLocalJointRotation");
      }

      public GetLocalJointRotation_args getEmptyArgsInstance() {
        return new GetLocalJointRotation_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion>() { 
          public void onComplete(de.mosim.mmi.math.MQuaternion o) {
            GetLocalJointRotation_result result = new GetLocalJointRotation_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            GetLocalJointRotation_result result = new GetLocalJointRotation_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, GetLocalJointRotation_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.math.MQuaternion> resultHandler) throws org.apache.thrift.TException {
        iface.GetLocalJointRotation(args.avatarId, args.joint,resultHandler);
      }
    }

    public static class SetRootPosition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetRootPosition_args, Void> {
      public SetRootPosition() {
        super("SetRootPosition");
      }

      public SetRootPosition_args getEmptyArgsInstance() {
        return new SetRootPosition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetRootPosition_result result = new SetRootPosition_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetRootPosition_result result = new SetRootPosition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetRootPosition_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetRootPosition(args.avatarId, args.position,resultHandler);
      }
    }

    public static class SetRootRotation<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetRootRotation_args, Void> {
      public SetRootRotation() {
        super("SetRootRotation");
      }

      public SetRootRotation_args getEmptyArgsInstance() {
        return new SetRootRotation_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetRootRotation_result result = new SetRootRotation_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetRootRotation_result result = new SetRootRotation_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetRootRotation_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetRootRotation(args.avatarId, args.rotation,resultHandler);
      }
    }

    public static class SetGlobalJointPosition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetGlobalJointPosition_args, Void> {
      public SetGlobalJointPosition() {
        super("SetGlobalJointPosition");
      }

      public SetGlobalJointPosition_args getEmptyArgsInstance() {
        return new SetGlobalJointPosition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetGlobalJointPosition_result result = new SetGlobalJointPosition_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetGlobalJointPosition_result result = new SetGlobalJointPosition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetGlobalJointPosition_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetGlobalJointPosition(args.avatarId, args.joint, args.position,resultHandler);
      }
    }

    public static class SetGlobalJointRotation<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetGlobalJointRotation_args, Void> {
      public SetGlobalJointRotation() {
        super("SetGlobalJointRotation");
      }

      public SetGlobalJointRotation_args getEmptyArgsInstance() {
        return new SetGlobalJointRotation_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetGlobalJointRotation_result result = new SetGlobalJointRotation_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetGlobalJointRotation_result result = new SetGlobalJointRotation_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetGlobalJointRotation_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetGlobalJointRotation(args.avatarId, args.joint, args.rotation,resultHandler);
      }
    }

    public static class SetLocalJointPosition<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetLocalJointPosition_args, Void> {
      public SetLocalJointPosition() {
        super("SetLocalJointPosition");
      }

      public SetLocalJointPosition_args getEmptyArgsInstance() {
        return new SetLocalJointPosition_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetLocalJointPosition_result result = new SetLocalJointPosition_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetLocalJointPosition_result result = new SetLocalJointPosition_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetLocalJointPosition_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetLocalJointPosition(args.avatarId, args.joint, args.position,resultHandler);
      }
    }

    public static class SetLocalJointRotation<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, SetLocalJointRotation_args, Void> {
      public SetLocalJointRotation() {
        super("SetLocalJointRotation");
      }

      public SetLocalJointRotation_args getEmptyArgsInstance() {
        return new SetLocalJointRotation_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            SetLocalJointRotation_result result = new SetLocalJointRotation_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            SetLocalJointRotation_result result = new SetLocalJointRotation_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, SetLocalJointRotation_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.SetLocalJointRotation(args.avatarId, args.joint, args.rotation,resultHandler);
      }
    }

    public static class RecomputeCurrentPostureValues<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, RecomputeCurrentPostureValues_args, de.mosim.mmi.avatar.MAvatarPostureValues> {
      public RecomputeCurrentPostureValues() {
        super("RecomputeCurrentPostureValues");
      }

      public RecomputeCurrentPostureValues_args getEmptyArgsInstance() {
        return new RecomputeCurrentPostureValues_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues>() { 
          public void onComplete(de.mosim.mmi.avatar.MAvatarPostureValues o) {
            RecomputeCurrentPostureValues_result result = new RecomputeCurrentPostureValues_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            RecomputeCurrentPostureValues_result result = new RecomputeCurrentPostureValues_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, RecomputeCurrentPostureValues_args args, org.apache.thrift.async.AsyncMethodCallback<de.mosim.mmi.avatar.MAvatarPostureValues> resultHandler) throws org.apache.thrift.TException {
        iface.RecomputeCurrentPostureValues(args.avatarId,resultHandler);
      }
    }

  }

  public static class InitializeAnthropometry_args implements org.apache.thrift.TBase<InitializeAnthropometry_args, InitializeAnthropometry_args._Fields>, java.io.Serializable, Cloneable, Comparable<InitializeAnthropometry_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InitializeAnthropometry_args");

    private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new InitializeAnthropometry_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new InitializeAnthropometry_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarDescription description; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      DESCRIPTION((short)1, "description");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // DESCRIPTION
            return DESCRIPTION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarDescription.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InitializeAnthropometry_args.class, metaDataMap);
    }

    public InitializeAnthropometry_args() {
    }

    public InitializeAnthropometry_args(
      de.mosim.mmi.avatar.MAvatarDescription description)
    {
      this();
      this.description = description;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public InitializeAnthropometry_args(InitializeAnthropometry_args other) {
      if (other.isSetDescription()) {
        this.description = new de.mosim.mmi.avatar.MAvatarDescription(other.description);
      }
    }

    public InitializeAnthropometry_args deepCopy() {
      return new InitializeAnthropometry_args(this);
    }

    @Override
    public void clear() {
      this.description = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarDescription getDescription() {
      return this.description;
    }

    public InitializeAnthropometry_args setDescription(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarDescription description) {
      this.description = description;
      return this;
    }

    public void unsetDescription() {
      this.description = null;
    }

    /** Returns true if field description is set (has been assigned a value) and false otherwise */
    public boolean isSetDescription() {
      return this.description != null;
    }

    public void setDescriptionIsSet(boolean value) {
      if (!value) {
        this.description = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case DESCRIPTION:
        if (value == null) {
          unsetDescription();
        } else {
          setDescription((de.mosim.mmi.avatar.MAvatarDescription)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case DESCRIPTION:
        return getDescription();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case DESCRIPTION:
        return isSetDescription();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof InitializeAnthropometry_args)
        return this.equals((InitializeAnthropometry_args)that);
      return false;
    }

    public boolean equals(InitializeAnthropometry_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_description = true && this.isSetDescription();
      boolean that_present_description = true && that.isSetDescription();
      if (this_present_description || that_present_description) {
        if (!(this_present_description && that_present_description))
          return false;
        if (!this.description.equals(that.description))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
      if (isSetDescription())
        hashCode = hashCode * 8191 + description.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(InitializeAnthropometry_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescription()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("InitializeAnthropometry_args(");
      boolean first = true;

      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (description != null) {
        description.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class InitializeAnthropometry_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public InitializeAnthropometry_argsStandardScheme getScheme() {
        return new InitializeAnthropometry_argsStandardScheme();
      }
    }

    private static class InitializeAnthropometry_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<InitializeAnthropometry_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, InitializeAnthropometry_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // DESCRIPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.description = new de.mosim.mmi.avatar.MAvatarDescription();
                struct.description.read(iprot);
                struct.setDescriptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, InitializeAnthropometry_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.description != null) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          struct.description.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class InitializeAnthropometry_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public InitializeAnthropometry_argsTupleScheme getScheme() {
        return new InitializeAnthropometry_argsTupleScheme();
      }
    }

    private static class InitializeAnthropometry_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<InitializeAnthropometry_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, InitializeAnthropometry_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetDescription()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetDescription()) {
          struct.description.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, InitializeAnthropometry_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.description = new de.mosim.mmi.avatar.MAvatarDescription();
          struct.description.read(iprot);
          struct.setDescriptionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class InitializeAnthropometry_result implements org.apache.thrift.TBase<InitializeAnthropometry_result, InitializeAnthropometry_result._Fields>, java.io.Serializable, Cloneable, Comparable<InitializeAnthropometry_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InitializeAnthropometry_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new InitializeAnthropometry_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new InitializeAnthropometry_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InitializeAnthropometry_result.class, metaDataMap);
    }

    public InitializeAnthropometry_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public InitializeAnthropometry_result(InitializeAnthropometry_result other) {
    }

    public InitializeAnthropometry_result deepCopy() {
      return new InitializeAnthropometry_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof InitializeAnthropometry_result)
        return this.equals((InitializeAnthropometry_result)that);
      return false;
    }

    public boolean equals(InitializeAnthropometry_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(InitializeAnthropometry_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("InitializeAnthropometry_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class InitializeAnthropometry_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public InitializeAnthropometry_resultStandardScheme getScheme() {
        return new InitializeAnthropometry_resultStandardScheme();
      }
    }

    private static class InitializeAnthropometry_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<InitializeAnthropometry_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, InitializeAnthropometry_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, InitializeAnthropometry_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class InitializeAnthropometry_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public InitializeAnthropometry_resultTupleScheme getScheme() {
        return new InitializeAnthropometry_resultTupleScheme();
      }
    }

    private static class InitializeAnthropometry_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<InitializeAnthropometry_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, InitializeAnthropometry_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, InitializeAnthropometry_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetAvatarDescription_args implements org.apache.thrift.TBase<GetAvatarDescription_args, GetAvatarDescription_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetAvatarDescription_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetAvatarDescription_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetAvatarDescription_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetAvatarDescription_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetAvatarDescription_args.class, metaDataMap);
    }

    public GetAvatarDescription_args() {
    }

    public GetAvatarDescription_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetAvatarDescription_args(GetAvatarDescription_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetAvatarDescription_args deepCopy() {
      return new GetAvatarDescription_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetAvatarDescription_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetAvatarDescription_args)
        return this.equals((GetAvatarDescription_args)that);
      return false;
    }

    public boolean equals(GetAvatarDescription_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetAvatarDescription_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetAvatarDescription_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetAvatarDescription_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetAvatarDescription_argsStandardScheme getScheme() {
        return new GetAvatarDescription_argsStandardScheme();
      }
    }

    private static class GetAvatarDescription_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetAvatarDescription_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetAvatarDescription_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetAvatarDescription_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetAvatarDescription_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetAvatarDescription_argsTupleScheme getScheme() {
        return new GetAvatarDescription_argsTupleScheme();
      }
    }

    private static class GetAvatarDescription_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetAvatarDescription_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetAvatarDescription_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetAvatarDescription_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetAvatarDescription_result implements org.apache.thrift.TBase<GetAvatarDescription_result, GetAvatarDescription_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetAvatarDescription_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetAvatarDescription_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetAvatarDescription_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetAvatarDescription_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarDescription success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarDescription.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetAvatarDescription_result.class, metaDataMap);
    }

    public GetAvatarDescription_result() {
    }

    public GetAvatarDescription_result(
      de.mosim.mmi.avatar.MAvatarDescription success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetAvatarDescription_result(GetAvatarDescription_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.avatar.MAvatarDescription(other.success);
      }
    }

    public GetAvatarDescription_result deepCopy() {
      return new GetAvatarDescription_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarDescription getSuccess() {
      return this.success;
    }

    public GetAvatarDescription_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarDescription success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.avatar.MAvatarDescription)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetAvatarDescription_result)
        return this.equals((GetAvatarDescription_result)that);
      return false;
    }

    public boolean equals(GetAvatarDescription_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetAvatarDescription_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetAvatarDescription_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetAvatarDescription_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetAvatarDescription_resultStandardScheme getScheme() {
        return new GetAvatarDescription_resultStandardScheme();
      }
    }

    private static class GetAvatarDescription_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetAvatarDescription_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetAvatarDescription_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.avatar.MAvatarDescription();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetAvatarDescription_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetAvatarDescription_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetAvatarDescription_resultTupleScheme getScheme() {
        return new GetAvatarDescription_resultTupleScheme();
      }
    }

    private static class GetAvatarDescription_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetAvatarDescription_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetAvatarDescription_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetAvatarDescription_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.avatar.MAvatarDescription();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetAnimatedJoints_args implements org.apache.thrift.TBase<SetAnimatedJoints_args, SetAnimatedJoints_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetAnimatedJoints_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetAnimatedJoints_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("joints", org.apache.thrift.protocol.TType.LIST, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetAnimatedJoints_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetAnimatedJoints_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required
    public @org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.avatar.MJointType> joints; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID"),
      JOINTS((short)2, "joints");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINTS
            return JOINTS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINTS, new org.apache.thrift.meta_data.FieldMetaData("joints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetAnimatedJoints_args.class, metaDataMap);
    }

    public SetAnimatedJoints_args() {
    }

    public SetAnimatedJoints_args(
      java.lang.String avatarID,
      java.util.List<de.mosim.mmi.avatar.MJointType> joints)
    {
      this();
      this.avatarID = avatarID;
      this.joints = joints;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetAnimatedJoints_args(SetAnimatedJoints_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
      if (other.isSetJoints()) {
        java.util.List<de.mosim.mmi.avatar.MJointType> __this__joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>(other.joints.size());
        for (de.mosim.mmi.avatar.MJointType other_element : other.joints) {
          __this__joints.add(other_element);
        }
        this.joints = __this__joints;
      }
    }

    public SetAnimatedJoints_args deepCopy() {
      return new SetAnimatedJoints_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
      this.joints = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public SetAnimatedJoints_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public int getJointsSize() {
      return (this.joints == null) ? 0 : this.joints.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<de.mosim.mmi.avatar.MJointType> getJointsIterator() {
      return (this.joints == null) ? null : this.joints.iterator();
    }

    public void addToJoints(de.mosim.mmi.avatar.MJointType elem) {
      if (this.joints == null) {
        this.joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>();
      }
      this.joints.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<de.mosim.mmi.avatar.MJointType> getJoints() {
      return this.joints;
    }

    public SetAnimatedJoints_args setJoints(@org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.avatar.MJointType> joints) {
      this.joints = joints;
      return this;
    }

    public void unsetJoints() {
      this.joints = null;
    }

    /** Returns true if field joints is set (has been assigned a value) and false otherwise */
    public boolean isSetJoints() {
      return this.joints != null;
    }

    public void setJointsIsSet(boolean value) {
      if (!value) {
        this.joints = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      case JOINTS:
        if (value == null) {
          unsetJoints();
        } else {
          setJoints((java.util.List<de.mosim.mmi.avatar.MJointType>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      case JOINTS:
        return getJoints();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      case JOINTS:
        return isSetJoints();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetAnimatedJoints_args)
        return this.equals((SetAnimatedJoints_args)that);
      return false;
    }

    public boolean equals(SetAnimatedJoints_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      boolean this_present_joints = true && this.isSetJoints();
      boolean that_present_joints = true && that.isSetJoints();
      if (this_present_joints || that_present_joints) {
        if (!(this_present_joints && that_present_joints))
          return false;
        if (!this.joints.equals(that.joints))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoints()) ? 131071 : 524287);
      if (isSetJoints())
        hashCode = hashCode * 8191 + joints.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetAnimatedJoints_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoints()).compareTo(other.isSetJoints());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoints()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joints, other.joints);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetAnimatedJoints_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joints:");
      if (this.joints == null) {
        sb.append("null");
      } else {
        sb.append(this.joints);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetAnimatedJoints_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetAnimatedJoints_argsStandardScheme getScheme() {
        return new SetAnimatedJoints_argsStandardScheme();
      }
    }

    private static class SetAnimatedJoints_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetAnimatedJoints_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetAnimatedJoints_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINTS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list324 = iprot.readListBegin();
                  struct.joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>(_list324.size);
                  @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType _elem325;
                  for (int _i326 = 0; _i326 < _list324.size; ++_i326)
                  {
                    _elem325 = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                    if (_elem325 != null)
                    {
                      struct.joints.add(_elem325);
                    }
                  }
                  iprot.readListEnd();
                }
                struct.setJointsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetAnimatedJoints_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        if (struct.joints != null) {
          oprot.writeFieldBegin(JOINTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.joints.size()));
            for (de.mosim.mmi.avatar.MJointType _iter327 : struct.joints)
            {
              oprot.writeI32(_iter327.getValue());
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetAnimatedJoints_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetAnimatedJoints_argsTupleScheme getScheme() {
        return new SetAnimatedJoints_argsTupleScheme();
      }
    }

    private static class SetAnimatedJoints_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetAnimatedJoints_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetAnimatedJoints_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        if (struct.isSetJoints()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
        if (struct.isSetJoints()) {
          {
            oprot.writeI32(struct.joints.size());
            for (de.mosim.mmi.avatar.MJointType _iter328 : struct.joints)
            {
              oprot.writeI32(_iter328.getValue());
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetAnimatedJoints_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
        if (incoming.get(1)) {
          {
            org.apache.thrift.protocol.TList _list329 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>(_list329.size);
            @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType _elem330;
            for (int _i331 = 0; _i331 < _list329.size; ++_i331)
            {
              _elem330 = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
              if (_elem330 != null)
              {
                struct.joints.add(_elem330);
              }
            }
          }
          struct.setJointsIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetAnimatedJoints_result implements org.apache.thrift.TBase<SetAnimatedJoints_result, SetAnimatedJoints_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetAnimatedJoints_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetAnimatedJoints_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetAnimatedJoints_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetAnimatedJoints_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetAnimatedJoints_result.class, metaDataMap);
    }

    public SetAnimatedJoints_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetAnimatedJoints_result(SetAnimatedJoints_result other) {
    }

    public SetAnimatedJoints_result deepCopy() {
      return new SetAnimatedJoints_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetAnimatedJoints_result)
        return this.equals((SetAnimatedJoints_result)that);
      return false;
    }

    public boolean equals(SetAnimatedJoints_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetAnimatedJoints_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetAnimatedJoints_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetAnimatedJoints_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetAnimatedJoints_resultStandardScheme getScheme() {
        return new SetAnimatedJoints_resultStandardScheme();
      }
    }

    private static class SetAnimatedJoints_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetAnimatedJoints_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetAnimatedJoints_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetAnimatedJoints_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetAnimatedJoints_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetAnimatedJoints_resultTupleScheme getScheme() {
        return new SetAnimatedJoints_resultTupleScheme();
      }
    }

    private static class SetAnimatedJoints_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetAnimatedJoints_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetAnimatedJoints_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetAnimatedJoints_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetChannelData_args implements org.apache.thrift.TBase<SetChannelData_args, SetChannelData_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetChannelData_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetChannelData_args");

    private static final org.apache.thrift.protocol.TField VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("values", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetChannelData_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetChannelData_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues values; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      VALUES((short)1, "values");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // VALUES
            return VALUES;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.VALUES, new org.apache.thrift.meta_data.FieldMetaData("values", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetChannelData_args.class, metaDataMap);
    }

    public SetChannelData_args() {
    }

    public SetChannelData_args(
      de.mosim.mmi.avatar.MAvatarPostureValues values)
    {
      this();
      this.values = values;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetChannelData_args(SetChannelData_args other) {
      if (other.isSetValues()) {
        this.values = new de.mosim.mmi.avatar.MAvatarPostureValues(other.values);
      }
    }

    public SetChannelData_args deepCopy() {
      return new SetChannelData_args(this);
    }

    @Override
    public void clear() {
      this.values = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPostureValues getValues() {
      return this.values;
    }

    public SetChannelData_args setValues(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues values) {
      this.values = values;
      return this;
    }

    public void unsetValues() {
      this.values = null;
    }

    /** Returns true if field values is set (has been assigned a value) and false otherwise */
    public boolean isSetValues() {
      return this.values != null;
    }

    public void setValuesIsSet(boolean value) {
      if (!value) {
        this.values = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case VALUES:
        if (value == null) {
          unsetValues();
        } else {
          setValues((de.mosim.mmi.avatar.MAvatarPostureValues)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case VALUES:
        return getValues();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case VALUES:
        return isSetValues();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetChannelData_args)
        return this.equals((SetChannelData_args)that);
      return false;
    }

    public boolean equals(SetChannelData_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_values = true && this.isSetValues();
      boolean that_present_values = true && that.isSetValues();
      if (this_present_values || that_present_values) {
        if (!(this_present_values && that_present_values))
          return false;
        if (!this.values.equals(that.values))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetValues()) ? 131071 : 524287);
      if (isSetValues())
        hashCode = hashCode * 8191 + values.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetChannelData_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetValues()).compareTo(other.isSetValues());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetValues()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.values, other.values);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetChannelData_args(");
      boolean first = true;

      sb.append("values:");
      if (this.values == null) {
        sb.append("null");
      } else {
        sb.append(this.values);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (values != null) {
        values.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetChannelData_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetChannelData_argsStandardScheme getScheme() {
        return new SetChannelData_argsStandardScheme();
      }
    }

    private static class SetChannelData_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetChannelData_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetChannelData_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // VALUES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.values = new de.mosim.mmi.avatar.MAvatarPostureValues();
                struct.values.read(iprot);
                struct.setValuesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetChannelData_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.values != null) {
          oprot.writeFieldBegin(VALUES_FIELD_DESC);
          struct.values.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetChannelData_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetChannelData_argsTupleScheme getScheme() {
        return new SetChannelData_argsTupleScheme();
      }
    }

    private static class SetChannelData_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetChannelData_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetChannelData_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetValues()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetValues()) {
          struct.values.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetChannelData_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.values = new de.mosim.mmi.avatar.MAvatarPostureValues();
          struct.values.read(iprot);
          struct.setValuesIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetChannelData_result implements org.apache.thrift.TBase<SetChannelData_result, SetChannelData_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetChannelData_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetChannelData_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetChannelData_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetChannelData_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetChannelData_result.class, metaDataMap);
    }

    public SetChannelData_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetChannelData_result(SetChannelData_result other) {
    }

    public SetChannelData_result deepCopy() {
      return new SetChannelData_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetChannelData_result)
        return this.equals((SetChannelData_result)that);
      return false;
    }

    public boolean equals(SetChannelData_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetChannelData_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetChannelData_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetChannelData_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetChannelData_resultStandardScheme getScheme() {
        return new SetChannelData_resultStandardScheme();
      }
    }

    private static class SetChannelData_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetChannelData_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetChannelData_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetChannelData_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetChannelData_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetChannelData_resultTupleScheme getScheme() {
        return new SetChannelData_resultTupleScheme();
      }
    }

    private static class SetChannelData_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetChannelData_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetChannelData_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetChannelData_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentGlobalPosture_args implements org.apache.thrift.TBase<GetCurrentGlobalPosture_args, GetCurrentGlobalPosture_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentGlobalPosture_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentGlobalPosture_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentGlobalPosture_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentGlobalPosture_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentGlobalPosture_args.class, metaDataMap);
    }

    public GetCurrentGlobalPosture_args() {
    }

    public GetCurrentGlobalPosture_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentGlobalPosture_args(GetCurrentGlobalPosture_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetCurrentGlobalPosture_args deepCopy() {
      return new GetCurrentGlobalPosture_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetCurrentGlobalPosture_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentGlobalPosture_args)
        return this.equals((GetCurrentGlobalPosture_args)that);
      return false;
    }

    public boolean equals(GetCurrentGlobalPosture_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentGlobalPosture_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentGlobalPosture_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentGlobalPosture_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentGlobalPosture_argsStandardScheme getScheme() {
        return new GetCurrentGlobalPosture_argsStandardScheme();
      }
    }

    private static class GetCurrentGlobalPosture_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentGlobalPosture_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentGlobalPosture_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentGlobalPosture_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentGlobalPosture_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentGlobalPosture_argsTupleScheme getScheme() {
        return new GetCurrentGlobalPosture_argsTupleScheme();
      }
    }

    private static class GetCurrentGlobalPosture_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentGlobalPosture_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentGlobalPosture_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentGlobalPosture_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentGlobalPosture_result implements org.apache.thrift.TBase<GetCurrentGlobalPosture_result, GetCurrentGlobalPosture_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentGlobalPosture_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentGlobalPosture_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentGlobalPosture_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentGlobalPosture_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPosture success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPosture.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentGlobalPosture_result.class, metaDataMap);
    }

    public GetCurrentGlobalPosture_result() {
    }

    public GetCurrentGlobalPosture_result(
      de.mosim.mmi.avatar.MAvatarPosture success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentGlobalPosture_result(GetCurrentGlobalPosture_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.avatar.MAvatarPosture(other.success);
      }
    }

    public GetCurrentGlobalPosture_result deepCopy() {
      return new GetCurrentGlobalPosture_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPosture getSuccess() {
      return this.success;
    }

    public GetCurrentGlobalPosture_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPosture success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.avatar.MAvatarPosture)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentGlobalPosture_result)
        return this.equals((GetCurrentGlobalPosture_result)that);
      return false;
    }

    public boolean equals(GetCurrentGlobalPosture_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentGlobalPosture_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentGlobalPosture_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentGlobalPosture_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentGlobalPosture_resultStandardScheme getScheme() {
        return new GetCurrentGlobalPosture_resultStandardScheme();
      }
    }

    private static class GetCurrentGlobalPosture_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentGlobalPosture_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentGlobalPosture_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.avatar.MAvatarPosture();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentGlobalPosture_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentGlobalPosture_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentGlobalPosture_resultTupleScheme getScheme() {
        return new GetCurrentGlobalPosture_resultTupleScheme();
      }
    }

    private static class GetCurrentGlobalPosture_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentGlobalPosture_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentGlobalPosture_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentGlobalPosture_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.avatar.MAvatarPosture();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentLocalPosture_args implements org.apache.thrift.TBase<GetCurrentLocalPosture_args, GetCurrentLocalPosture_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentLocalPosture_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentLocalPosture_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentLocalPosture_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentLocalPosture_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentLocalPosture_args.class, metaDataMap);
    }

    public GetCurrentLocalPosture_args() {
    }

    public GetCurrentLocalPosture_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentLocalPosture_args(GetCurrentLocalPosture_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetCurrentLocalPosture_args deepCopy() {
      return new GetCurrentLocalPosture_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetCurrentLocalPosture_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentLocalPosture_args)
        return this.equals((GetCurrentLocalPosture_args)that);
      return false;
    }

    public boolean equals(GetCurrentLocalPosture_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentLocalPosture_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentLocalPosture_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentLocalPosture_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentLocalPosture_argsStandardScheme getScheme() {
        return new GetCurrentLocalPosture_argsStandardScheme();
      }
    }

    private static class GetCurrentLocalPosture_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentLocalPosture_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentLocalPosture_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentLocalPosture_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentLocalPosture_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentLocalPosture_argsTupleScheme getScheme() {
        return new GetCurrentLocalPosture_argsTupleScheme();
      }
    }

    private static class GetCurrentLocalPosture_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentLocalPosture_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentLocalPosture_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentLocalPosture_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentLocalPosture_result implements org.apache.thrift.TBase<GetCurrentLocalPosture_result, GetCurrentLocalPosture_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentLocalPosture_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentLocalPosture_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentLocalPosture_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentLocalPosture_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPosture success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPosture.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentLocalPosture_result.class, metaDataMap);
    }

    public GetCurrentLocalPosture_result() {
    }

    public GetCurrentLocalPosture_result(
      de.mosim.mmi.avatar.MAvatarPosture success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentLocalPosture_result(GetCurrentLocalPosture_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.avatar.MAvatarPosture(other.success);
      }
    }

    public GetCurrentLocalPosture_result deepCopy() {
      return new GetCurrentLocalPosture_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPosture getSuccess() {
      return this.success;
    }

    public GetCurrentLocalPosture_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPosture success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.avatar.MAvatarPosture)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentLocalPosture_result)
        return this.equals((GetCurrentLocalPosture_result)that);
      return false;
    }

    public boolean equals(GetCurrentLocalPosture_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentLocalPosture_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentLocalPosture_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentLocalPosture_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentLocalPosture_resultStandardScheme getScheme() {
        return new GetCurrentLocalPosture_resultStandardScheme();
      }
    }

    private static class GetCurrentLocalPosture_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentLocalPosture_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentLocalPosture_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.avatar.MAvatarPosture();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentLocalPosture_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentLocalPosture_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentLocalPosture_resultTupleScheme getScheme() {
        return new GetCurrentLocalPosture_resultTupleScheme();
      }
    }

    private static class GetCurrentLocalPosture_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentLocalPosture_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentLocalPosture_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentLocalPosture_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.avatar.MAvatarPosture();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentPostureValues_args implements org.apache.thrift.TBase<GetCurrentPostureValues_args, GetCurrentPostureValues_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentPostureValues_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentPostureValues_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentPostureValues_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentPostureValues_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentPostureValues_args.class, metaDataMap);
    }

    public GetCurrentPostureValues_args() {
    }

    public GetCurrentPostureValues_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentPostureValues_args(GetCurrentPostureValues_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetCurrentPostureValues_args deepCopy() {
      return new GetCurrentPostureValues_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetCurrentPostureValues_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentPostureValues_args)
        return this.equals((GetCurrentPostureValues_args)that);
      return false;
    }

    public boolean equals(GetCurrentPostureValues_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentPostureValues_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentPostureValues_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentPostureValues_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValues_argsStandardScheme getScheme() {
        return new GetCurrentPostureValues_argsStandardScheme();
      }
    }

    private static class GetCurrentPostureValues_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentPostureValues_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentPostureValues_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValues_argsTupleScheme getScheme() {
        return new GetCurrentPostureValues_argsTupleScheme();
      }
    }

    private static class GetCurrentPostureValues_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentPostureValues_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentPostureValues_result implements org.apache.thrift.TBase<GetCurrentPostureValues_result, GetCurrentPostureValues_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentPostureValues_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentPostureValues_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentPostureValues_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentPostureValues_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentPostureValues_result.class, metaDataMap);
    }

    public GetCurrentPostureValues_result() {
    }

    public GetCurrentPostureValues_result(
      de.mosim.mmi.avatar.MAvatarPostureValues success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentPostureValues_result(GetCurrentPostureValues_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.avatar.MAvatarPostureValues(other.success);
      }
    }

    public GetCurrentPostureValues_result deepCopy() {
      return new GetCurrentPostureValues_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPostureValues getSuccess() {
      return this.success;
    }

    public GetCurrentPostureValues_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.avatar.MAvatarPostureValues)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentPostureValues_result)
        return this.equals((GetCurrentPostureValues_result)that);
      return false;
    }

    public boolean equals(GetCurrentPostureValues_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentPostureValues_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentPostureValues_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentPostureValues_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValues_resultStandardScheme getScheme() {
        return new GetCurrentPostureValues_resultStandardScheme();
      }
    }

    private static class GetCurrentPostureValues_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentPostureValues_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.avatar.MAvatarPostureValues();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentPostureValues_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValues_resultTupleScheme getScheme() {
        return new GetCurrentPostureValues_resultTupleScheme();
      }
    }

    private static class GetCurrentPostureValues_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentPostureValues_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.avatar.MAvatarPostureValues();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentPostureValuesPartial_args implements org.apache.thrift.TBase<GetCurrentPostureValuesPartial_args, GetCurrentPostureValuesPartial_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentPostureValuesPartial_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentPostureValuesPartial_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINTS_FIELD_DESC = new org.apache.thrift.protocol.TField("joints", org.apache.thrift.protocol.TType.LIST, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentPostureValuesPartial_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentPostureValuesPartial_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required
    public @org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.avatar.MJointType> joints; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID"),
      JOINTS((short)2, "joints");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINTS
            return JOINTS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINTS, new org.apache.thrift.meta_data.FieldMetaData("joints", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentPostureValuesPartial_args.class, metaDataMap);
    }

    public GetCurrentPostureValuesPartial_args() {
    }

    public GetCurrentPostureValuesPartial_args(
      java.lang.String avatarID,
      java.util.List<de.mosim.mmi.avatar.MJointType> joints)
    {
      this();
      this.avatarID = avatarID;
      this.joints = joints;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentPostureValuesPartial_args(GetCurrentPostureValuesPartial_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
      if (other.isSetJoints()) {
        java.util.List<de.mosim.mmi.avatar.MJointType> __this__joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>(other.joints.size());
        for (de.mosim.mmi.avatar.MJointType other_element : other.joints) {
          __this__joints.add(other_element);
        }
        this.joints = __this__joints;
      }
    }

    public GetCurrentPostureValuesPartial_args deepCopy() {
      return new GetCurrentPostureValuesPartial_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
      this.joints = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetCurrentPostureValuesPartial_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public int getJointsSize() {
      return (this.joints == null) ? 0 : this.joints.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<de.mosim.mmi.avatar.MJointType> getJointsIterator() {
      return (this.joints == null) ? null : this.joints.iterator();
    }

    public void addToJoints(de.mosim.mmi.avatar.MJointType elem) {
      if (this.joints == null) {
        this.joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>();
      }
      this.joints.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<de.mosim.mmi.avatar.MJointType> getJoints() {
      return this.joints;
    }

    public GetCurrentPostureValuesPartial_args setJoints(@org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.avatar.MJointType> joints) {
      this.joints = joints;
      return this;
    }

    public void unsetJoints() {
      this.joints = null;
    }

    /** Returns true if field joints is set (has been assigned a value) and false otherwise */
    public boolean isSetJoints() {
      return this.joints != null;
    }

    public void setJointsIsSet(boolean value) {
      if (!value) {
        this.joints = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      case JOINTS:
        if (value == null) {
          unsetJoints();
        } else {
          setJoints((java.util.List<de.mosim.mmi.avatar.MJointType>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      case JOINTS:
        return getJoints();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      case JOINTS:
        return isSetJoints();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentPostureValuesPartial_args)
        return this.equals((GetCurrentPostureValuesPartial_args)that);
      return false;
    }

    public boolean equals(GetCurrentPostureValuesPartial_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      boolean this_present_joints = true && this.isSetJoints();
      boolean that_present_joints = true && that.isSetJoints();
      if (this_present_joints || that_present_joints) {
        if (!(this_present_joints && that_present_joints))
          return false;
        if (!this.joints.equals(that.joints))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoints()) ? 131071 : 524287);
      if (isSetJoints())
        hashCode = hashCode * 8191 + joints.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentPostureValuesPartial_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoints()).compareTo(other.isSetJoints());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoints()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joints, other.joints);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentPostureValuesPartial_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joints:");
      if (this.joints == null) {
        sb.append("null");
      } else {
        sb.append(this.joints);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentPostureValuesPartial_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValuesPartial_argsStandardScheme getScheme() {
        return new GetCurrentPostureValuesPartial_argsStandardScheme();
      }
    }

    private static class GetCurrentPostureValuesPartial_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentPostureValuesPartial_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentPostureValuesPartial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINTS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list332 = iprot.readListBegin();
                  struct.joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>(_list332.size);
                  @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType _elem333;
                  for (int _i334 = 0; _i334 < _list332.size; ++_i334)
                  {
                    _elem333 = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                    if (_elem333 != null)
                    {
                      struct.joints.add(_elem333);
                    }
                  }
                  iprot.readListEnd();
                }
                struct.setJointsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentPostureValuesPartial_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        if (struct.joints != null) {
          oprot.writeFieldBegin(JOINTS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.joints.size()));
            for (de.mosim.mmi.avatar.MJointType _iter335 : struct.joints)
            {
              oprot.writeI32(_iter335.getValue());
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentPostureValuesPartial_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValuesPartial_argsTupleScheme getScheme() {
        return new GetCurrentPostureValuesPartial_argsTupleScheme();
      }
    }

    private static class GetCurrentPostureValuesPartial_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentPostureValuesPartial_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValuesPartial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        if (struct.isSetJoints()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
        if (struct.isSetJoints()) {
          {
            oprot.writeI32(struct.joints.size());
            for (de.mosim.mmi.avatar.MJointType _iter336 : struct.joints)
            {
              oprot.writeI32(_iter336.getValue());
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValuesPartial_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
        if (incoming.get(1)) {
          {
            org.apache.thrift.protocol.TList _list337 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
            struct.joints = new java.util.ArrayList<de.mosim.mmi.avatar.MJointType>(_list337.size);
            @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType _elem338;
            for (int _i339 = 0; _i339 < _list337.size; ++_i339)
            {
              _elem338 = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
              if (_elem338 != null)
              {
                struct.joints.add(_elem338);
              }
            }
          }
          struct.setJointsIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentPostureValuesPartial_result implements org.apache.thrift.TBase<GetCurrentPostureValuesPartial_result, GetCurrentPostureValuesPartial_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentPostureValuesPartial_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentPostureValuesPartial_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentPostureValuesPartial_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentPostureValuesPartial_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentPostureValuesPartial_result.class, metaDataMap);
    }

    public GetCurrentPostureValuesPartial_result() {
    }

    public GetCurrentPostureValuesPartial_result(
      de.mosim.mmi.avatar.MAvatarPostureValues success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentPostureValuesPartial_result(GetCurrentPostureValuesPartial_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.avatar.MAvatarPostureValues(other.success);
      }
    }

    public GetCurrentPostureValuesPartial_result deepCopy() {
      return new GetCurrentPostureValuesPartial_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPostureValues getSuccess() {
      return this.success;
    }

    public GetCurrentPostureValuesPartial_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.avatar.MAvatarPostureValues)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentPostureValuesPartial_result)
        return this.equals((GetCurrentPostureValuesPartial_result)that);
      return false;
    }

    public boolean equals(GetCurrentPostureValuesPartial_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentPostureValuesPartial_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentPostureValuesPartial_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentPostureValuesPartial_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValuesPartial_resultStandardScheme getScheme() {
        return new GetCurrentPostureValuesPartial_resultStandardScheme();
      }
    }

    private static class GetCurrentPostureValuesPartial_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentPostureValuesPartial_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentPostureValuesPartial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.avatar.MAvatarPostureValues();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentPostureValuesPartial_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentPostureValuesPartial_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentPostureValuesPartial_resultTupleScheme getScheme() {
        return new GetCurrentPostureValuesPartial_resultTupleScheme();
      }
    }

    private static class GetCurrentPostureValuesPartial_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentPostureValuesPartial_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValuesPartial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentPostureValuesPartial_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.avatar.MAvatarPostureValues();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentJointPositions_args implements org.apache.thrift.TBase<GetCurrentJointPositions_args, GetCurrentJointPositions_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentJointPositions_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentJointPositions_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentJointPositions_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentJointPositions_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentJointPositions_args.class, metaDataMap);
    }

    public GetCurrentJointPositions_args() {
    }

    public GetCurrentJointPositions_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentJointPositions_args(GetCurrentJointPositions_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetCurrentJointPositions_args deepCopy() {
      return new GetCurrentJointPositions_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetCurrentJointPositions_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentJointPositions_args)
        return this.equals((GetCurrentJointPositions_args)that);
      return false;
    }

    public boolean equals(GetCurrentJointPositions_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentJointPositions_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentJointPositions_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentJointPositions_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentJointPositions_argsStandardScheme getScheme() {
        return new GetCurrentJointPositions_argsStandardScheme();
      }
    }

    private static class GetCurrentJointPositions_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentJointPositions_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentJointPositions_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentJointPositions_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentJointPositions_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentJointPositions_argsTupleScheme getScheme() {
        return new GetCurrentJointPositions_argsTupleScheme();
      }
    }

    private static class GetCurrentJointPositions_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentJointPositions_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentJointPositions_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentJointPositions_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetCurrentJointPositions_result implements org.apache.thrift.TBase<GetCurrentJointPositions_result, GetCurrentJointPositions_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetCurrentJointPositions_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCurrentJointPositions_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCurrentJointPositions_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCurrentJointPositions_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.math.MVector3> success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCurrentJointPositions_result.class, metaDataMap);
    }

    public GetCurrentJointPositions_result() {
    }

    public GetCurrentJointPositions_result(
      java.util.List<de.mosim.mmi.math.MVector3> success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetCurrentJointPositions_result(GetCurrentJointPositions_result other) {
      if (other.isSetSuccess()) {
        java.util.List<de.mosim.mmi.math.MVector3> __this__success = new java.util.ArrayList<de.mosim.mmi.math.MVector3>(other.success.size());
        for (de.mosim.mmi.math.MVector3 other_element : other.success) {
          __this__success.add(new de.mosim.mmi.math.MVector3(other_element));
        }
        this.success = __this__success;
      }
    }

    public GetCurrentJointPositions_result deepCopy() {
      return new GetCurrentJointPositions_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.Iterator<de.mosim.mmi.math.MVector3> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(de.mosim.mmi.math.MVector3 elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<de.mosim.mmi.math.MVector3>();
      }
      this.success.add(elem);
    }

    @org.apache.thrift.annotation.Nullable
    public java.util.List<de.mosim.mmi.math.MVector3> getSuccess() {
      return this.success;
    }

    public GetCurrentJointPositions_result setSuccess(@org.apache.thrift.annotation.Nullable java.util.List<de.mosim.mmi.math.MVector3> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<de.mosim.mmi.math.MVector3>)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetCurrentJointPositions_result)
        return this.equals((GetCurrentJointPositions_result)that);
      return false;
    }

    public boolean equals(GetCurrentJointPositions_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetCurrentJointPositions_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCurrentJointPositions_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetCurrentJointPositions_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentJointPositions_resultStandardScheme getScheme() {
        return new GetCurrentJointPositions_resultStandardScheme();
      }
    }

    private static class GetCurrentJointPositions_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCurrentJointPositions_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetCurrentJointPositions_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list340 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<de.mosim.mmi.math.MVector3>(_list340.size);
                  @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 _elem341;
                  for (int _i342 = 0; _i342 < _list340.size; ++_i342)
                  {
                    _elem341 = new de.mosim.mmi.math.MVector3();
                    _elem341.read(iprot);
                    struct.success.add(_elem341);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetCurrentJointPositions_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (de.mosim.mmi.math.MVector3 _iter343 : struct.success)
            {
              _iter343.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetCurrentJointPositions_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetCurrentJointPositions_resultTupleScheme getScheme() {
        return new GetCurrentJointPositions_resultTupleScheme();
      }
    }

    private static class GetCurrentJointPositions_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCurrentJointPositions_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetCurrentJointPositions_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (de.mosim.mmi.math.MVector3 _iter344 : struct.success)
            {
              _iter344.write(oprot);
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetCurrentJointPositions_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list345 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<de.mosim.mmi.math.MVector3>(_list345.size);
            @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 _elem346;
            for (int _i347 = 0; _i347 < _list345.size; ++_i347)
            {
              _elem346 = new de.mosim.mmi.math.MVector3();
              _elem346.read(iprot);
              struct.success.add(_elem346);
            }
          }
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetRootPosition_args implements org.apache.thrift.TBase<GetRootPosition_args, GetRootPosition_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetRootPosition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetRootPosition_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetRootPosition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetRootPosition_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetRootPosition_args.class, metaDataMap);
    }

    public GetRootPosition_args() {
    }

    public GetRootPosition_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetRootPosition_args(GetRootPosition_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetRootPosition_args deepCopy() {
      return new GetRootPosition_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetRootPosition_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetRootPosition_args)
        return this.equals((GetRootPosition_args)that);
      return false;
    }

    public boolean equals(GetRootPosition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetRootPosition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetRootPosition_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetRootPosition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootPosition_argsStandardScheme getScheme() {
        return new GetRootPosition_argsStandardScheme();
      }
    }

    private static class GetRootPosition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetRootPosition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetRootPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetRootPosition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetRootPosition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootPosition_argsTupleScheme getScheme() {
        return new GetRootPosition_argsTupleScheme();
      }
    }

    private static class GetRootPosition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetRootPosition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetRootPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetRootPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetRootPosition_result implements org.apache.thrift.TBase<GetRootPosition_result, GetRootPosition_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetRootPosition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetRootPosition_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetRootPosition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetRootPosition_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetRootPosition_result.class, metaDataMap);
    }

    public GetRootPosition_result() {
    }

    public GetRootPosition_result(
      de.mosim.mmi.math.MVector3 success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetRootPosition_result(GetRootPosition_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.math.MVector3(other.success);
      }
    }

    public GetRootPosition_result deepCopy() {
      return new GetRootPosition_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MVector3 getSuccess() {
      return this.success;
    }

    public GetRootPosition_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.math.MVector3)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetRootPosition_result)
        return this.equals((GetRootPosition_result)that);
      return false;
    }

    public boolean equals(GetRootPosition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetRootPosition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetRootPosition_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetRootPosition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootPosition_resultStandardScheme getScheme() {
        return new GetRootPosition_resultStandardScheme();
      }
    }

    private static class GetRootPosition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetRootPosition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetRootPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.math.MVector3();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetRootPosition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetRootPosition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootPosition_resultTupleScheme getScheme() {
        return new GetRootPosition_resultTupleScheme();
      }
    }

    private static class GetRootPosition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetRootPosition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetRootPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetRootPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.math.MVector3();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetRootRotation_args implements org.apache.thrift.TBase<GetRootRotation_args, GetRootRotation_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetRootRotation_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetRootRotation_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarID", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetRootRotation_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetRootRotation_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarID; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarID");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetRootRotation_args.class, metaDataMap);
    }

    public GetRootRotation_args() {
    }

    public GetRootRotation_args(
      java.lang.String avatarID)
    {
      this();
      this.avatarID = avatarID;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetRootRotation_args(GetRootRotation_args other) {
      if (other.isSetAvatarID()) {
        this.avatarID = other.avatarID;
      }
    }

    public GetRootRotation_args deepCopy() {
      return new GetRootRotation_args(this);
    }

    @Override
    public void clear() {
      this.avatarID = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarID() {
      return this.avatarID;
    }

    public GetRootRotation_args setAvatarID(@org.apache.thrift.annotation.Nullable java.lang.String avatarID) {
      this.avatarID = avatarID;
      return this;
    }

    public void unsetAvatarID() {
      this.avatarID = null;
    }

    /** Returns true if field avatarID is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarID() {
      return this.avatarID != null;
    }

    public void setAvatarIDIsSet(boolean value) {
      if (!value) {
        this.avatarID = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarID();
        } else {
          setAvatarID((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarID();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarID();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetRootRotation_args)
        return this.equals((GetRootRotation_args)that);
      return false;
    }

    public boolean equals(GetRootRotation_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarID = true && this.isSetAvatarID();
      boolean that_present_avatarID = true && that.isSetAvatarID();
      if (this_present_avatarID || that_present_avatarID) {
        if (!(this_present_avatarID && that_present_avatarID))
          return false;
        if (!this.avatarID.equals(that.avatarID))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarID()) ? 131071 : 524287);
      if (isSetAvatarID())
        hashCode = hashCode * 8191 + avatarID.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetRootRotation_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarID()).compareTo(other.isSetAvatarID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarID, other.avatarID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetRootRotation_args(");
      boolean first = true;

      sb.append("avatarID:");
      if (this.avatarID == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarID);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetRootRotation_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootRotation_argsStandardScheme getScheme() {
        return new GetRootRotation_argsStandardScheme();
      }
    }

    private static class GetRootRotation_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetRootRotation_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetRootRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarID = iprot.readString();
                struct.setAvatarIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetRootRotation_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarID != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarID);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetRootRotation_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootRotation_argsTupleScheme getScheme() {
        return new GetRootRotation_argsTupleScheme();
      }
    }

    private static class GetRootRotation_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetRootRotation_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetRootRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarID()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarID()) {
          oprot.writeString(struct.avatarID);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetRootRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarID = iprot.readString();
          struct.setAvatarIDIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetRootRotation_result implements org.apache.thrift.TBase<GetRootRotation_result, GetRootRotation_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetRootRotation_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetRootRotation_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetRootRotation_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetRootRotation_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MQuaternion.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetRootRotation_result.class, metaDataMap);
    }

    public GetRootRotation_result() {
    }

    public GetRootRotation_result(
      de.mosim.mmi.math.MQuaternion success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetRootRotation_result(GetRootRotation_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.math.MQuaternion(other.success);
      }
    }

    public GetRootRotation_result deepCopy() {
      return new GetRootRotation_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MQuaternion getSuccess() {
      return this.success;
    }

    public GetRootRotation_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.math.MQuaternion)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetRootRotation_result)
        return this.equals((GetRootRotation_result)that);
      return false;
    }

    public boolean equals(GetRootRotation_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetRootRotation_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetRootRotation_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetRootRotation_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootRotation_resultStandardScheme getScheme() {
        return new GetRootRotation_resultStandardScheme();
      }
    }

    private static class GetRootRotation_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetRootRotation_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetRootRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.math.MQuaternion();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetRootRotation_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetRootRotation_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetRootRotation_resultTupleScheme getScheme() {
        return new GetRootRotation_resultTupleScheme();
      }
    }

    private static class GetRootRotation_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetRootRotation_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetRootRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetRootRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.math.MQuaternion();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetGlobalJointPosition_args implements org.apache.thrift.TBase<GetGlobalJointPosition_args, GetGlobalJointPosition_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetGlobalJointPosition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetGlobalJointPosition_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetGlobalJointPosition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetGlobalJointPosition_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetGlobalJointPosition_args.class, metaDataMap);
    }

    public GetGlobalJointPosition_args() {
    }

    public GetGlobalJointPosition_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetGlobalJointPosition_args(GetGlobalJointPosition_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
    }

    public GetGlobalJointPosition_args deepCopy() {
      return new GetGlobalJointPosition_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public GetGlobalJointPosition_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public GetGlobalJointPosition_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetGlobalJointPosition_args)
        return this.equals((GetGlobalJointPosition_args)that);
      return false;
    }

    public boolean equals(GetGlobalJointPosition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      return hashCode;
    }

    @Override
    public int compareTo(GetGlobalJointPosition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetGlobalJointPosition_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetGlobalJointPosition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointPosition_argsStandardScheme getScheme() {
        return new GetGlobalJointPosition_argsStandardScheme();
      }
    }

    private static class GetGlobalJointPosition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetGlobalJointPosition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetGlobalJointPosition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointPosition_argsTupleScheme getScheme() {
        return new GetGlobalJointPosition_argsTupleScheme();
      }
    }

    private static class GetGlobalJointPosition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetGlobalJointPosition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetGlobalJointPosition_result implements org.apache.thrift.TBase<GetGlobalJointPosition_result, GetGlobalJointPosition_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetGlobalJointPosition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetGlobalJointPosition_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetGlobalJointPosition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetGlobalJointPosition_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetGlobalJointPosition_result.class, metaDataMap);
    }

    public GetGlobalJointPosition_result() {
    }

    public GetGlobalJointPosition_result(
      de.mosim.mmi.math.MVector3 success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetGlobalJointPosition_result(GetGlobalJointPosition_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.math.MVector3(other.success);
      }
    }

    public GetGlobalJointPosition_result deepCopy() {
      return new GetGlobalJointPosition_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MVector3 getSuccess() {
      return this.success;
    }

    public GetGlobalJointPosition_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.math.MVector3)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetGlobalJointPosition_result)
        return this.equals((GetGlobalJointPosition_result)that);
      return false;
    }

    public boolean equals(GetGlobalJointPosition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetGlobalJointPosition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetGlobalJointPosition_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetGlobalJointPosition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointPosition_resultStandardScheme getScheme() {
        return new GetGlobalJointPosition_resultStandardScheme();
      }
    }

    private static class GetGlobalJointPosition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetGlobalJointPosition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.math.MVector3();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetGlobalJointPosition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointPosition_resultTupleScheme getScheme() {
        return new GetGlobalJointPosition_resultTupleScheme();
      }
    }

    private static class GetGlobalJointPosition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetGlobalJointPosition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.math.MVector3();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetGlobalJointRotation_args implements org.apache.thrift.TBase<GetGlobalJointRotation_args, GetGlobalJointRotation_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetGlobalJointRotation_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetGlobalJointRotation_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetGlobalJointRotation_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetGlobalJointRotation_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetGlobalJointRotation_args.class, metaDataMap);
    }

    public GetGlobalJointRotation_args() {
    }

    public GetGlobalJointRotation_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetGlobalJointRotation_args(GetGlobalJointRotation_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
    }

    public GetGlobalJointRotation_args deepCopy() {
      return new GetGlobalJointRotation_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public GetGlobalJointRotation_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public GetGlobalJointRotation_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetGlobalJointRotation_args)
        return this.equals((GetGlobalJointRotation_args)that);
      return false;
    }

    public boolean equals(GetGlobalJointRotation_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      return hashCode;
    }

    @Override
    public int compareTo(GetGlobalJointRotation_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetGlobalJointRotation_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetGlobalJointRotation_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointRotation_argsStandardScheme getScheme() {
        return new GetGlobalJointRotation_argsStandardScheme();
      }
    }

    private static class GetGlobalJointRotation_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetGlobalJointRotation_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetGlobalJointRotation_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointRotation_argsTupleScheme getScheme() {
        return new GetGlobalJointRotation_argsTupleScheme();
      }
    }

    private static class GetGlobalJointRotation_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetGlobalJointRotation_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetGlobalJointRotation_result implements org.apache.thrift.TBase<GetGlobalJointRotation_result, GetGlobalJointRotation_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetGlobalJointRotation_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetGlobalJointRotation_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetGlobalJointRotation_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetGlobalJointRotation_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MQuaternion.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetGlobalJointRotation_result.class, metaDataMap);
    }

    public GetGlobalJointRotation_result() {
    }

    public GetGlobalJointRotation_result(
      de.mosim.mmi.math.MQuaternion success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetGlobalJointRotation_result(GetGlobalJointRotation_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.math.MQuaternion(other.success);
      }
    }

    public GetGlobalJointRotation_result deepCopy() {
      return new GetGlobalJointRotation_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MQuaternion getSuccess() {
      return this.success;
    }

    public GetGlobalJointRotation_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.math.MQuaternion)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetGlobalJointRotation_result)
        return this.equals((GetGlobalJointRotation_result)that);
      return false;
    }

    public boolean equals(GetGlobalJointRotation_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetGlobalJointRotation_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetGlobalJointRotation_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetGlobalJointRotation_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointRotation_resultStandardScheme getScheme() {
        return new GetGlobalJointRotation_resultStandardScheme();
      }
    }

    private static class GetGlobalJointRotation_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetGlobalJointRotation_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.math.MQuaternion();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetGlobalJointRotation_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetGlobalJointRotation_resultTupleScheme getScheme() {
        return new GetGlobalJointRotation_resultTupleScheme();
      }
    }

    private static class GetGlobalJointRotation_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetGlobalJointRotation_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.math.MQuaternion();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetLocalJointPosition_args implements org.apache.thrift.TBase<GetLocalJointPosition_args, GetLocalJointPosition_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetLocalJointPosition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetLocalJointPosition_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetLocalJointPosition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetLocalJointPosition_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetLocalJointPosition_args.class, metaDataMap);
    }

    public GetLocalJointPosition_args() {
    }

    public GetLocalJointPosition_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetLocalJointPosition_args(GetLocalJointPosition_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
    }

    public GetLocalJointPosition_args deepCopy() {
      return new GetLocalJointPosition_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public GetLocalJointPosition_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public GetLocalJointPosition_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetLocalJointPosition_args)
        return this.equals((GetLocalJointPosition_args)that);
      return false;
    }

    public boolean equals(GetLocalJointPosition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      return hashCode;
    }

    @Override
    public int compareTo(GetLocalJointPosition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetLocalJointPosition_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetLocalJointPosition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointPosition_argsStandardScheme getScheme() {
        return new GetLocalJointPosition_argsStandardScheme();
      }
    }

    private static class GetLocalJointPosition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetLocalJointPosition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetLocalJointPosition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointPosition_argsTupleScheme getScheme() {
        return new GetLocalJointPosition_argsTupleScheme();
      }
    }

    private static class GetLocalJointPosition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetLocalJointPosition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetLocalJointPosition_result implements org.apache.thrift.TBase<GetLocalJointPosition_result, GetLocalJointPosition_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetLocalJointPosition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetLocalJointPosition_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetLocalJointPosition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetLocalJointPosition_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetLocalJointPosition_result.class, metaDataMap);
    }

    public GetLocalJointPosition_result() {
    }

    public GetLocalJointPosition_result(
      de.mosim.mmi.math.MVector3 success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetLocalJointPosition_result(GetLocalJointPosition_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.math.MVector3(other.success);
      }
    }

    public GetLocalJointPosition_result deepCopy() {
      return new GetLocalJointPosition_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MVector3 getSuccess() {
      return this.success;
    }

    public GetLocalJointPosition_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.math.MVector3)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetLocalJointPosition_result)
        return this.equals((GetLocalJointPosition_result)that);
      return false;
    }

    public boolean equals(GetLocalJointPosition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetLocalJointPosition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetLocalJointPosition_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetLocalJointPosition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointPosition_resultStandardScheme getScheme() {
        return new GetLocalJointPosition_resultStandardScheme();
      }
    }

    private static class GetLocalJointPosition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetLocalJointPosition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.math.MVector3();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetLocalJointPosition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointPosition_resultTupleScheme getScheme() {
        return new GetLocalJointPosition_resultTupleScheme();
      }
    }

    private static class GetLocalJointPosition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetLocalJointPosition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.math.MVector3();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetLocalJointRotation_args implements org.apache.thrift.TBase<GetLocalJointRotation_args, GetLocalJointRotation_args._Fields>, java.io.Serializable, Cloneable, Comparable<GetLocalJointRotation_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetLocalJointRotation_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetLocalJointRotation_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetLocalJointRotation_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetLocalJointRotation_args.class, metaDataMap);
    }

    public GetLocalJointRotation_args() {
    }

    public GetLocalJointRotation_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetLocalJointRotation_args(GetLocalJointRotation_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
    }

    public GetLocalJointRotation_args deepCopy() {
      return new GetLocalJointRotation_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public GetLocalJointRotation_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public GetLocalJointRotation_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetLocalJointRotation_args)
        return this.equals((GetLocalJointRotation_args)that);
      return false;
    }

    public boolean equals(GetLocalJointRotation_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      return hashCode;
    }

    @Override
    public int compareTo(GetLocalJointRotation_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetLocalJointRotation_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetLocalJointRotation_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointRotation_argsStandardScheme getScheme() {
        return new GetLocalJointRotation_argsStandardScheme();
      }
    }

    private static class GetLocalJointRotation_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetLocalJointRotation_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetLocalJointRotation_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointRotation_argsTupleScheme getScheme() {
        return new GetLocalJointRotation_argsTupleScheme();
      }
    }

    private static class GetLocalJointRotation_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetLocalJointRotation_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class GetLocalJointRotation_result implements org.apache.thrift.TBase<GetLocalJointRotation_result, GetLocalJointRotation_result._Fields>, java.io.Serializable, Cloneable, Comparable<GetLocalJointRotation_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetLocalJointRotation_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetLocalJointRotation_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetLocalJointRotation_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MQuaternion.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetLocalJointRotation_result.class, metaDataMap);
    }

    public GetLocalJointRotation_result() {
    }

    public GetLocalJointRotation_result(
      de.mosim.mmi.math.MQuaternion success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public GetLocalJointRotation_result(GetLocalJointRotation_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.math.MQuaternion(other.success);
      }
    }

    public GetLocalJointRotation_result deepCopy() {
      return new GetLocalJointRotation_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MQuaternion getSuccess() {
      return this.success;
    }

    public GetLocalJointRotation_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.math.MQuaternion)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof GetLocalJointRotation_result)
        return this.equals((GetLocalJointRotation_result)that);
      return false;
    }

    public boolean equals(GetLocalJointRotation_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(GetLocalJointRotation_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("GetLocalJointRotation_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class GetLocalJointRotation_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointRotation_resultStandardScheme getScheme() {
        return new GetLocalJointRotation_resultStandardScheme();
      }
    }

    private static class GetLocalJointRotation_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetLocalJointRotation_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, GetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.math.MQuaternion();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, GetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class GetLocalJointRotation_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public GetLocalJointRotation_resultTupleScheme getScheme() {
        return new GetLocalJointRotation_resultTupleScheme();
      }
    }

    private static class GetLocalJointRotation_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetLocalJointRotation_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, GetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, GetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.math.MQuaternion();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetRootPosition_args implements org.apache.thrift.TBase<SetRootPosition_args, SetRootPosition_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetRootPosition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetRootPosition_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetRootPosition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetRootPosition_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 position; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      POSITION((short)2, "position");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // POSITION
            return POSITION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetRootPosition_args.class, metaDataMap);
    }

    public SetRootPosition_args() {
    }

    public SetRootPosition_args(
      java.lang.String avatarId,
      de.mosim.mmi.math.MVector3 position)
    {
      this();
      this.avatarId = avatarId;
      this.position = position;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetRootPosition_args(SetRootPosition_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetPosition()) {
        this.position = new de.mosim.mmi.math.MVector3(other.position);
      }
    }

    public SetRootPosition_args deepCopy() {
      return new SetRootPosition_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.position = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public SetRootPosition_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MVector3 getPosition() {
      return this.position;
    }

    public SetRootPosition_args setPosition(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 position) {
      this.position = position;
      return this;
    }

    public void unsetPosition() {
      this.position = null;
    }

    /** Returns true if field position is set (has been assigned a value) and false otherwise */
    public boolean isSetPosition() {
      return this.position != null;
    }

    public void setPositionIsSet(boolean value) {
      if (!value) {
        this.position = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case POSITION:
        if (value == null) {
          unsetPosition();
        } else {
          setPosition((de.mosim.mmi.math.MVector3)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case POSITION:
        return getPosition();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case POSITION:
        return isSetPosition();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetRootPosition_args)
        return this.equals((SetRootPosition_args)that);
      return false;
    }

    public boolean equals(SetRootPosition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_position = true && this.isSetPosition();
      boolean that_present_position = true && that.isSetPosition();
      if (this_present_position || that_present_position) {
        if (!(this_present_position && that_present_position))
          return false;
        if (!this.position.equals(that.position))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
      if (isSetPosition())
        hashCode = hashCode * 8191 + position.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetRootPosition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPosition()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetRootPosition_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (position != null) {
        position.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetRootPosition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootPosition_argsStandardScheme getScheme() {
        return new SetRootPosition_argsStandardScheme();
      }
    }

    private static class SetRootPosition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetRootPosition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetRootPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // POSITION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.position = new de.mosim.mmi.math.MVector3();
                struct.position.read(iprot);
                struct.setPositionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetRootPosition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.position != null) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          struct.position.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetRootPosition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootPosition_argsTupleScheme getScheme() {
        return new SetRootPosition_argsTupleScheme();
      }
    }

    private static class SetRootPosition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetRootPosition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetRootPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetPosition()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetPosition()) {
          struct.position.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetRootPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.position = new de.mosim.mmi.math.MVector3();
          struct.position.read(iprot);
          struct.setPositionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetRootPosition_result implements org.apache.thrift.TBase<SetRootPosition_result, SetRootPosition_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetRootPosition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetRootPosition_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetRootPosition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetRootPosition_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetRootPosition_result.class, metaDataMap);
    }

    public SetRootPosition_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetRootPosition_result(SetRootPosition_result other) {
    }

    public SetRootPosition_result deepCopy() {
      return new SetRootPosition_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetRootPosition_result)
        return this.equals((SetRootPosition_result)that);
      return false;
    }

    public boolean equals(SetRootPosition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetRootPosition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetRootPosition_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetRootPosition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootPosition_resultStandardScheme getScheme() {
        return new SetRootPosition_resultStandardScheme();
      }
    }

    private static class SetRootPosition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetRootPosition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetRootPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetRootPosition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetRootPosition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootPosition_resultTupleScheme getScheme() {
        return new SetRootPosition_resultTupleScheme();
      }
    }

    private static class SetRootPosition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetRootPosition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetRootPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetRootPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetRootRotation_args implements org.apache.thrift.TBase<SetRootRotation_args, SetRootRotation_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetRootRotation_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetRootRotation_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField ROTATION_FIELD_DESC = new org.apache.thrift.protocol.TField("rotation", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetRootRotation_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetRootRotation_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion rotation; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      ROTATION((short)2, "rotation");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // ROTATION
            return ROTATION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ROTATION, new org.apache.thrift.meta_data.FieldMetaData("rotation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MQuaternion.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetRootRotation_args.class, metaDataMap);
    }

    public SetRootRotation_args() {
    }

    public SetRootRotation_args(
      java.lang.String avatarId,
      de.mosim.mmi.math.MQuaternion rotation)
    {
      this();
      this.avatarId = avatarId;
      this.rotation = rotation;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetRootRotation_args(SetRootRotation_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetRotation()) {
        this.rotation = new de.mosim.mmi.math.MQuaternion(other.rotation);
      }
    }

    public SetRootRotation_args deepCopy() {
      return new SetRootRotation_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.rotation = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public SetRootRotation_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MQuaternion getRotation() {
      return this.rotation;
    }

    public SetRootRotation_args setRotation(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion rotation) {
      this.rotation = rotation;
      return this;
    }

    public void unsetRotation() {
      this.rotation = null;
    }

    /** Returns true if field rotation is set (has been assigned a value) and false otherwise */
    public boolean isSetRotation() {
      return this.rotation != null;
    }

    public void setRotationIsSet(boolean value) {
      if (!value) {
        this.rotation = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case ROTATION:
        if (value == null) {
          unsetRotation();
        } else {
          setRotation((de.mosim.mmi.math.MQuaternion)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case ROTATION:
        return getRotation();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case ROTATION:
        return isSetRotation();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetRootRotation_args)
        return this.equals((SetRootRotation_args)that);
      return false;
    }

    public boolean equals(SetRootRotation_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_rotation = true && this.isSetRotation();
      boolean that_present_rotation = true && that.isSetRotation();
      if (this_present_rotation || that_present_rotation) {
        if (!(this_present_rotation && that_present_rotation))
          return false;
        if (!this.rotation.equals(that.rotation))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetRotation()) ? 131071 : 524287);
      if (isSetRotation())
        hashCode = hashCode * 8191 + rotation.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetRootRotation_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetRotation()).compareTo(other.isSetRotation());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRotation()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rotation, other.rotation);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetRootRotation_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("rotation:");
      if (this.rotation == null) {
        sb.append("null");
      } else {
        sb.append(this.rotation);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (rotation != null) {
        rotation.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetRootRotation_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootRotation_argsStandardScheme getScheme() {
        return new SetRootRotation_argsStandardScheme();
      }
    }

    private static class SetRootRotation_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetRootRotation_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetRootRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ROTATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.rotation = new de.mosim.mmi.math.MQuaternion();
                struct.rotation.read(iprot);
                struct.setRotationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetRootRotation_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.rotation != null) {
          oprot.writeFieldBegin(ROTATION_FIELD_DESC);
          struct.rotation.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetRootRotation_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootRotation_argsTupleScheme getScheme() {
        return new SetRootRotation_argsTupleScheme();
      }
    }

    private static class SetRootRotation_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetRootRotation_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetRootRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetRotation()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetRotation()) {
          struct.rotation.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetRootRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.rotation = new de.mosim.mmi.math.MQuaternion();
          struct.rotation.read(iprot);
          struct.setRotationIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetRootRotation_result implements org.apache.thrift.TBase<SetRootRotation_result, SetRootRotation_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetRootRotation_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetRootRotation_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetRootRotation_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetRootRotation_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetRootRotation_result.class, metaDataMap);
    }

    public SetRootRotation_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetRootRotation_result(SetRootRotation_result other) {
    }

    public SetRootRotation_result deepCopy() {
      return new SetRootRotation_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetRootRotation_result)
        return this.equals((SetRootRotation_result)that);
      return false;
    }

    public boolean equals(SetRootRotation_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetRootRotation_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetRootRotation_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetRootRotation_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootRotation_resultStandardScheme getScheme() {
        return new SetRootRotation_resultStandardScheme();
      }
    }

    private static class SetRootRotation_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetRootRotation_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetRootRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetRootRotation_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetRootRotation_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetRootRotation_resultTupleScheme getScheme() {
        return new SetRootRotation_resultTupleScheme();
      }
    }

    private static class SetRootRotation_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetRootRotation_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetRootRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetRootRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetGlobalJointPosition_args implements org.apache.thrift.TBase<SetGlobalJointPosition_args, SetGlobalJointPosition_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetGlobalJointPosition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetGlobalJointPosition_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetGlobalJointPosition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetGlobalJointPosition_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 position; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint"),
      POSITION((short)3, "position");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          case 3: // POSITION
            return POSITION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetGlobalJointPosition_args.class, metaDataMap);
    }

    public SetGlobalJointPosition_args() {
    }

    public SetGlobalJointPosition_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint,
      de.mosim.mmi.math.MVector3 position)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
      this.position = position;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetGlobalJointPosition_args(SetGlobalJointPosition_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
      if (other.isSetPosition()) {
        this.position = new de.mosim.mmi.math.MVector3(other.position);
      }
    }

    public SetGlobalJointPosition_args deepCopy() {
      return new SetGlobalJointPosition_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
      this.position = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public SetGlobalJointPosition_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public SetGlobalJointPosition_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MVector3 getPosition() {
      return this.position;
    }

    public SetGlobalJointPosition_args setPosition(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 position) {
      this.position = position;
      return this;
    }

    public void unsetPosition() {
      this.position = null;
    }

    /** Returns true if field position is set (has been assigned a value) and false otherwise */
    public boolean isSetPosition() {
      return this.position != null;
    }

    public void setPositionIsSet(boolean value) {
      if (!value) {
        this.position = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      case POSITION:
        if (value == null) {
          unsetPosition();
        } else {
          setPosition((de.mosim.mmi.math.MVector3)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      case POSITION:
        return getPosition();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      case POSITION:
        return isSetPosition();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetGlobalJointPosition_args)
        return this.equals((SetGlobalJointPosition_args)that);
      return false;
    }

    public boolean equals(SetGlobalJointPosition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      boolean this_present_position = true && this.isSetPosition();
      boolean that_present_position = true && that.isSetPosition();
      if (this_present_position || that_present_position) {
        if (!(this_present_position && that_present_position))
          return false;
        if (!this.position.equals(that.position))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
      if (isSetPosition())
        hashCode = hashCode * 8191 + position.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetGlobalJointPosition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPosition()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetGlobalJointPosition_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (position != null) {
        position.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetGlobalJointPosition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointPosition_argsStandardScheme getScheme() {
        return new SetGlobalJointPosition_argsStandardScheme();
      }
    }

    private static class SetGlobalJointPosition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetGlobalJointPosition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // POSITION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.position = new de.mosim.mmi.math.MVector3();
                struct.position.read(iprot);
                struct.setPositionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.position != null) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          struct.position.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetGlobalJointPosition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointPosition_argsTupleScheme getScheme() {
        return new SetGlobalJointPosition_argsTupleScheme();
      }
    }

    private static class SetGlobalJointPosition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetGlobalJointPosition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        if (struct.isSetPosition()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
        if (struct.isSetPosition()) {
          struct.position.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
        if (incoming.get(2)) {
          struct.position = new de.mosim.mmi.math.MVector3();
          struct.position.read(iprot);
          struct.setPositionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetGlobalJointPosition_result implements org.apache.thrift.TBase<SetGlobalJointPosition_result, SetGlobalJointPosition_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetGlobalJointPosition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetGlobalJointPosition_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetGlobalJointPosition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetGlobalJointPosition_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetGlobalJointPosition_result.class, metaDataMap);
    }

    public SetGlobalJointPosition_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetGlobalJointPosition_result(SetGlobalJointPosition_result other) {
    }

    public SetGlobalJointPosition_result deepCopy() {
      return new SetGlobalJointPosition_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetGlobalJointPosition_result)
        return this.equals((SetGlobalJointPosition_result)that);
      return false;
    }

    public boolean equals(SetGlobalJointPosition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetGlobalJointPosition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetGlobalJointPosition_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetGlobalJointPosition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointPosition_resultStandardScheme getScheme() {
        return new SetGlobalJointPosition_resultStandardScheme();
      }
    }

    private static class SetGlobalJointPosition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetGlobalJointPosition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetGlobalJointPosition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointPosition_resultTupleScheme getScheme() {
        return new SetGlobalJointPosition_resultTupleScheme();
      }
    }

    private static class SetGlobalJointPosition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetGlobalJointPosition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetGlobalJointRotation_args implements org.apache.thrift.TBase<SetGlobalJointRotation_args, SetGlobalJointRotation_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetGlobalJointRotation_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetGlobalJointRotation_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField ROTATION_FIELD_DESC = new org.apache.thrift.protocol.TField("rotation", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetGlobalJointRotation_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetGlobalJointRotation_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion rotation; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint"),
      ROTATION((short)3, "rotation");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          case 3: // ROTATION
            return ROTATION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      tmpMap.put(_Fields.ROTATION, new org.apache.thrift.meta_data.FieldMetaData("rotation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MQuaternion.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetGlobalJointRotation_args.class, metaDataMap);
    }

    public SetGlobalJointRotation_args() {
    }

    public SetGlobalJointRotation_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint,
      de.mosim.mmi.math.MQuaternion rotation)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
      this.rotation = rotation;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetGlobalJointRotation_args(SetGlobalJointRotation_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
      if (other.isSetRotation()) {
        this.rotation = new de.mosim.mmi.math.MQuaternion(other.rotation);
      }
    }

    public SetGlobalJointRotation_args deepCopy() {
      return new SetGlobalJointRotation_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
      this.rotation = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public SetGlobalJointRotation_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public SetGlobalJointRotation_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MQuaternion getRotation() {
      return this.rotation;
    }

    public SetGlobalJointRotation_args setRotation(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion rotation) {
      this.rotation = rotation;
      return this;
    }

    public void unsetRotation() {
      this.rotation = null;
    }

    /** Returns true if field rotation is set (has been assigned a value) and false otherwise */
    public boolean isSetRotation() {
      return this.rotation != null;
    }

    public void setRotationIsSet(boolean value) {
      if (!value) {
        this.rotation = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      case ROTATION:
        if (value == null) {
          unsetRotation();
        } else {
          setRotation((de.mosim.mmi.math.MQuaternion)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      case ROTATION:
        return getRotation();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      case ROTATION:
        return isSetRotation();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetGlobalJointRotation_args)
        return this.equals((SetGlobalJointRotation_args)that);
      return false;
    }

    public boolean equals(SetGlobalJointRotation_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      boolean this_present_rotation = true && this.isSetRotation();
      boolean that_present_rotation = true && that.isSetRotation();
      if (this_present_rotation || that_present_rotation) {
        if (!(this_present_rotation && that_present_rotation))
          return false;
        if (!this.rotation.equals(that.rotation))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      hashCode = hashCode * 8191 + ((isSetRotation()) ? 131071 : 524287);
      if (isSetRotation())
        hashCode = hashCode * 8191 + rotation.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetGlobalJointRotation_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetRotation()).compareTo(other.isSetRotation());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRotation()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rotation, other.rotation);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetGlobalJointRotation_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("rotation:");
      if (this.rotation == null) {
        sb.append("null");
      } else {
        sb.append(this.rotation);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (rotation != null) {
        rotation.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetGlobalJointRotation_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointRotation_argsStandardScheme getScheme() {
        return new SetGlobalJointRotation_argsStandardScheme();
      }
    }

    private static class SetGlobalJointRotation_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetGlobalJointRotation_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ROTATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.rotation = new de.mosim.mmi.math.MQuaternion();
                struct.rotation.read(iprot);
                struct.setRotationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.rotation != null) {
          oprot.writeFieldBegin(ROTATION_FIELD_DESC);
          struct.rotation.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetGlobalJointRotation_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointRotation_argsTupleScheme getScheme() {
        return new SetGlobalJointRotation_argsTupleScheme();
      }
    }

    private static class SetGlobalJointRotation_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetGlobalJointRotation_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        if (struct.isSetRotation()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
        if (struct.isSetRotation()) {
          struct.rotation.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
        if (incoming.get(2)) {
          struct.rotation = new de.mosim.mmi.math.MQuaternion();
          struct.rotation.read(iprot);
          struct.setRotationIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetGlobalJointRotation_result implements org.apache.thrift.TBase<SetGlobalJointRotation_result, SetGlobalJointRotation_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetGlobalJointRotation_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetGlobalJointRotation_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetGlobalJointRotation_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetGlobalJointRotation_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetGlobalJointRotation_result.class, metaDataMap);
    }

    public SetGlobalJointRotation_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetGlobalJointRotation_result(SetGlobalJointRotation_result other) {
    }

    public SetGlobalJointRotation_result deepCopy() {
      return new SetGlobalJointRotation_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetGlobalJointRotation_result)
        return this.equals((SetGlobalJointRotation_result)that);
      return false;
    }

    public boolean equals(SetGlobalJointRotation_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetGlobalJointRotation_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetGlobalJointRotation_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetGlobalJointRotation_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointRotation_resultStandardScheme getScheme() {
        return new SetGlobalJointRotation_resultStandardScheme();
      }
    }

    private static class SetGlobalJointRotation_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetGlobalJointRotation_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetGlobalJointRotation_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetGlobalJointRotation_resultTupleScheme getScheme() {
        return new SetGlobalJointRotation_resultTupleScheme();
      }
    }

    private static class SetGlobalJointRotation_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetGlobalJointRotation_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetGlobalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetLocalJointPosition_args implements org.apache.thrift.TBase<SetLocalJointPosition_args, SetLocalJointPosition_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetLocalJointPosition_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetLocalJointPosition_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField POSITION_FIELD_DESC = new org.apache.thrift.protocol.TField("position", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetLocalJointPosition_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetLocalJointPosition_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 position; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint"),
      POSITION((short)3, "position");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          case 3: // POSITION
            return POSITION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      tmpMap.put(_Fields.POSITION, new org.apache.thrift.meta_data.FieldMetaData("position", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MVector3.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetLocalJointPosition_args.class, metaDataMap);
    }

    public SetLocalJointPosition_args() {
    }

    public SetLocalJointPosition_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint,
      de.mosim.mmi.math.MVector3 position)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
      this.position = position;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetLocalJointPosition_args(SetLocalJointPosition_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
      if (other.isSetPosition()) {
        this.position = new de.mosim.mmi.math.MVector3(other.position);
      }
    }

    public SetLocalJointPosition_args deepCopy() {
      return new SetLocalJointPosition_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
      this.position = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public SetLocalJointPosition_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public SetLocalJointPosition_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MVector3 getPosition() {
      return this.position;
    }

    public SetLocalJointPosition_args setPosition(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MVector3 position) {
      this.position = position;
      return this;
    }

    public void unsetPosition() {
      this.position = null;
    }

    /** Returns true if field position is set (has been assigned a value) and false otherwise */
    public boolean isSetPosition() {
      return this.position != null;
    }

    public void setPositionIsSet(boolean value) {
      if (!value) {
        this.position = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      case POSITION:
        if (value == null) {
          unsetPosition();
        } else {
          setPosition((de.mosim.mmi.math.MVector3)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      case POSITION:
        return getPosition();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      case POSITION:
        return isSetPosition();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetLocalJointPosition_args)
        return this.equals((SetLocalJointPosition_args)that);
      return false;
    }

    public boolean equals(SetLocalJointPosition_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      boolean this_present_position = true && this.isSetPosition();
      boolean that_present_position = true && that.isSetPosition();
      if (this_present_position || that_present_position) {
        if (!(this_present_position && that_present_position))
          return false;
        if (!this.position.equals(that.position))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      hashCode = hashCode * 8191 + ((isSetPosition()) ? 131071 : 524287);
      if (isSetPosition())
        hashCode = hashCode * 8191 + position.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetLocalJointPosition_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPosition()).compareTo(other.isSetPosition());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPosition()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.position, other.position);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetLocalJointPosition_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("position:");
      if (this.position == null) {
        sb.append("null");
      } else {
        sb.append(this.position);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (position != null) {
        position.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetLocalJointPosition_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointPosition_argsStandardScheme getScheme() {
        return new SetLocalJointPosition_argsStandardScheme();
      }
    }

    private static class SetLocalJointPosition_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetLocalJointPosition_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // POSITION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.position = new de.mosim.mmi.math.MVector3();
                struct.position.read(iprot);
                struct.setPositionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.position != null) {
          oprot.writeFieldBegin(POSITION_FIELD_DESC);
          struct.position.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetLocalJointPosition_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointPosition_argsTupleScheme getScheme() {
        return new SetLocalJointPosition_argsTupleScheme();
      }
    }

    private static class SetLocalJointPosition_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetLocalJointPosition_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        if (struct.isSetPosition()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
        if (struct.isSetPosition()) {
          struct.position.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetLocalJointPosition_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
        if (incoming.get(2)) {
          struct.position = new de.mosim.mmi.math.MVector3();
          struct.position.read(iprot);
          struct.setPositionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetLocalJointPosition_result implements org.apache.thrift.TBase<SetLocalJointPosition_result, SetLocalJointPosition_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetLocalJointPosition_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetLocalJointPosition_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetLocalJointPosition_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetLocalJointPosition_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetLocalJointPosition_result.class, metaDataMap);
    }

    public SetLocalJointPosition_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetLocalJointPosition_result(SetLocalJointPosition_result other) {
    }

    public SetLocalJointPosition_result deepCopy() {
      return new SetLocalJointPosition_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetLocalJointPosition_result)
        return this.equals((SetLocalJointPosition_result)that);
      return false;
    }

    public boolean equals(SetLocalJointPosition_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetLocalJointPosition_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetLocalJointPosition_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetLocalJointPosition_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointPosition_resultStandardScheme getScheme() {
        return new SetLocalJointPosition_resultStandardScheme();
      }
    }

    private static class SetLocalJointPosition_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetLocalJointPosition_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetLocalJointPosition_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointPosition_resultTupleScheme getScheme() {
        return new SetLocalJointPosition_resultTupleScheme();
      }
    }

    private static class SetLocalJointPosition_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetLocalJointPosition_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetLocalJointPosition_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetLocalJointRotation_args implements org.apache.thrift.TBase<SetLocalJointRotation_args, SetLocalJointRotation_args._Fields>, java.io.Serializable, Cloneable, Comparable<SetLocalJointRotation_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetLocalJointRotation_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField JOINT_FIELD_DESC = new org.apache.thrift.protocol.TField("joint", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField ROTATION_FIELD_DESC = new org.apache.thrift.protocol.TField("rotation", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetLocalJointRotation_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetLocalJointRotation_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required
    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint; // required
    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion rotation; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId"),
      /**
       * 
       * @see de.mosim.mmi.avatar.MJointType
       */
      JOINT((short)2, "joint"),
      ROTATION((short)3, "rotation");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          case 2: // JOINT
            return JOINT;
          case 3: // ROTATION
            return ROTATION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.JOINT, new org.apache.thrift.meta_data.FieldMetaData("joint", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, de.mosim.mmi.avatar.MJointType.class)));
      tmpMap.put(_Fields.ROTATION, new org.apache.thrift.meta_data.FieldMetaData("rotation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.math.MQuaternion.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetLocalJointRotation_args.class, metaDataMap);
    }

    public SetLocalJointRotation_args() {
    }

    public SetLocalJointRotation_args(
      java.lang.String avatarId,
      de.mosim.mmi.avatar.MJointType joint,
      de.mosim.mmi.math.MQuaternion rotation)
    {
      this();
      this.avatarId = avatarId;
      this.joint = joint;
      this.rotation = rotation;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetLocalJointRotation_args(SetLocalJointRotation_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
      if (other.isSetJoint()) {
        this.joint = other.joint;
      }
      if (other.isSetRotation()) {
        this.rotation = new de.mosim.mmi.math.MQuaternion(other.rotation);
      }
    }

    public SetLocalJointRotation_args deepCopy() {
      return new SetLocalJointRotation_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
      this.joint = null;
      this.rotation = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public SetLocalJointRotation_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MJointType getJoint() {
      return this.joint;
    }

    /**
     * 
     * @see de.mosim.mmi.avatar.MJointType
     */
    public SetLocalJointRotation_args setJoint(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MJointType joint) {
      this.joint = joint;
      return this;
    }

    public void unsetJoint() {
      this.joint = null;
    }

    /** Returns true if field joint is set (has been assigned a value) and false otherwise */
    public boolean isSetJoint() {
      return this.joint != null;
    }

    public void setJointIsSet(boolean value) {
      if (!value) {
        this.joint = null;
      }
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.math.MQuaternion getRotation() {
      return this.rotation;
    }

    public SetLocalJointRotation_args setRotation(@org.apache.thrift.annotation.Nullable de.mosim.mmi.math.MQuaternion rotation) {
      this.rotation = rotation;
      return this;
    }

    public void unsetRotation() {
      this.rotation = null;
    }

    /** Returns true if field rotation is set (has been assigned a value) and false otherwise */
    public boolean isSetRotation() {
      return this.rotation != null;
    }

    public void setRotationIsSet(boolean value) {
      if (!value) {
        this.rotation = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      case JOINT:
        if (value == null) {
          unsetJoint();
        } else {
          setJoint((de.mosim.mmi.avatar.MJointType)value);
        }
        break;

      case ROTATION:
        if (value == null) {
          unsetRotation();
        } else {
          setRotation((de.mosim.mmi.math.MQuaternion)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      case JOINT:
        return getJoint();

      case ROTATION:
        return getRotation();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      case JOINT:
        return isSetJoint();
      case ROTATION:
        return isSetRotation();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetLocalJointRotation_args)
        return this.equals((SetLocalJointRotation_args)that);
      return false;
    }

    public boolean equals(SetLocalJointRotation_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      boolean this_present_joint = true && this.isSetJoint();
      boolean that_present_joint = true && that.isSetJoint();
      if (this_present_joint || that_present_joint) {
        if (!(this_present_joint && that_present_joint))
          return false;
        if (!this.joint.equals(that.joint))
          return false;
      }

      boolean this_present_rotation = true && this.isSetRotation();
      boolean that_present_rotation = true && that.isSetRotation();
      if (this_present_rotation || that_present_rotation) {
        if (!(this_present_rotation && that_present_rotation))
          return false;
        if (!this.rotation.equals(that.rotation))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      hashCode = hashCode * 8191 + ((isSetJoint()) ? 131071 : 524287);
      if (isSetJoint())
        hashCode = hashCode * 8191 + joint.getValue();

      hashCode = hashCode * 8191 + ((isSetRotation()) ? 131071 : 524287);
      if (isSetRotation())
        hashCode = hashCode * 8191 + rotation.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(SetLocalJointRotation_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetJoint()).compareTo(other.isSetJoint());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJoint()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint, other.joint);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetRotation()).compareTo(other.isSetRotation());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRotation()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rotation, other.rotation);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetLocalJointRotation_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("joint:");
      if (this.joint == null) {
        sb.append("null");
      } else {
        sb.append(this.joint);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("rotation:");
      if (this.rotation == null) {
        sb.append("null");
      } else {
        sb.append(this.rotation);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (rotation != null) {
        rotation.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetLocalJointRotation_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointRotation_argsStandardScheme getScheme() {
        return new SetLocalJointRotation_argsStandardScheme();
      }
    }

    private static class SetLocalJointRotation_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetLocalJointRotation_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOINT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
                struct.setJointIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ROTATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.rotation = new de.mosim.mmi.math.MQuaternion();
                struct.rotation.read(iprot);
                struct.setRotationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        if (struct.joint != null) {
          oprot.writeFieldBegin(JOINT_FIELD_DESC);
          oprot.writeI32(struct.joint.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.rotation != null) {
          oprot.writeFieldBegin(ROTATION_FIELD_DESC);
          struct.rotation.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetLocalJointRotation_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointRotation_argsTupleScheme getScheme() {
        return new SetLocalJointRotation_argsTupleScheme();
      }
    }

    private static class SetLocalJointRotation_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetLocalJointRotation_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        if (struct.isSetJoint()) {
          optionals.set(1);
        }
        if (struct.isSetRotation()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
        if (struct.isSetJoint()) {
          oprot.writeI32(struct.joint.getValue());
        }
        if (struct.isSetRotation()) {
          struct.rotation.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetLocalJointRotation_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.joint = de.mosim.mmi.avatar.MJointType.findByValue(iprot.readI32());
          struct.setJointIsSet(true);
        }
        if (incoming.get(2)) {
          struct.rotation = new de.mosim.mmi.math.MQuaternion();
          struct.rotation.read(iprot);
          struct.setRotationIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class SetLocalJointRotation_result implements org.apache.thrift.TBase<SetLocalJointRotation_result, SetLocalJointRotation_result._Fields>, java.io.Serializable, Cloneable, Comparable<SetLocalJointRotation_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetLocalJointRotation_result");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetLocalJointRotation_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetLocalJointRotation_resultTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetLocalJointRotation_result.class, metaDataMap);
    }

    public SetLocalJointRotation_result() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public SetLocalJointRotation_result(SetLocalJointRotation_result other) {
    }

    public SetLocalJointRotation_result deepCopy() {
      return new SetLocalJointRotation_result(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof SetLocalJointRotation_result)
        return this.equals((SetLocalJointRotation_result)that);
      return false;
    }

    public boolean equals(SetLocalJointRotation_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(SetLocalJointRotation_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("SetLocalJointRotation_result(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class SetLocalJointRotation_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointRotation_resultStandardScheme getScheme() {
        return new SetLocalJointRotation_resultStandardScheme();
      }
    }

    private static class SetLocalJointRotation_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetLocalJointRotation_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, SetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, SetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class SetLocalJointRotation_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public SetLocalJointRotation_resultTupleScheme getScheme() {
        return new SetLocalJointRotation_resultTupleScheme();
      }
    }

    private static class SetLocalJointRotation_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetLocalJointRotation_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, SetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, SetLocalJointRotation_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class RecomputeCurrentPostureValues_args implements org.apache.thrift.TBase<RecomputeCurrentPostureValues_args, RecomputeCurrentPostureValues_args._Fields>, java.io.Serializable, Cloneable, Comparable<RecomputeCurrentPostureValues_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecomputeCurrentPostureValues_args");

    private static final org.apache.thrift.protocol.TField AVATAR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarId", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RecomputeCurrentPostureValues_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RecomputeCurrentPostureValues_argsTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable java.lang.String avatarId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      AVATAR_ID((short)1, "avatarId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // AVATAR_ID
            return AVATAR_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.AVATAR_ID, new org.apache.thrift.meta_data.FieldMetaData("avatarId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RecomputeCurrentPostureValues_args.class, metaDataMap);
    }

    public RecomputeCurrentPostureValues_args() {
    }

    public RecomputeCurrentPostureValues_args(
      java.lang.String avatarId)
    {
      this();
      this.avatarId = avatarId;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public RecomputeCurrentPostureValues_args(RecomputeCurrentPostureValues_args other) {
      if (other.isSetAvatarId()) {
        this.avatarId = other.avatarId;
      }
    }

    public RecomputeCurrentPostureValues_args deepCopy() {
      return new RecomputeCurrentPostureValues_args(this);
    }

    @Override
    public void clear() {
      this.avatarId = null;
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.String getAvatarId() {
      return this.avatarId;
    }

    public RecomputeCurrentPostureValues_args setAvatarId(@org.apache.thrift.annotation.Nullable java.lang.String avatarId) {
      this.avatarId = avatarId;
      return this;
    }

    public void unsetAvatarId() {
      this.avatarId = null;
    }

    /** Returns true if field avatarId is set (has been assigned a value) and false otherwise */
    public boolean isSetAvatarId() {
      return this.avatarId != null;
    }

    public void setAvatarIdIsSet(boolean value) {
      if (!value) {
        this.avatarId = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case AVATAR_ID:
        if (value == null) {
          unsetAvatarId();
        } else {
          setAvatarId((java.lang.String)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case AVATAR_ID:
        return getAvatarId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case AVATAR_ID:
        return isSetAvatarId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof RecomputeCurrentPostureValues_args)
        return this.equals((RecomputeCurrentPostureValues_args)that);
      return false;
    }

    public boolean equals(RecomputeCurrentPostureValues_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_avatarId = true && this.isSetAvatarId();
      boolean that_present_avatarId = true && that.isSetAvatarId();
      if (this_present_avatarId || that_present_avatarId) {
        if (!(this_present_avatarId && that_present_avatarId))
          return false;
        if (!this.avatarId.equals(that.avatarId))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetAvatarId()) ? 131071 : 524287);
      if (isSetAvatarId())
        hashCode = hashCode * 8191 + avatarId.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(RecomputeCurrentPostureValues_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetAvatarId()).compareTo(other.isSetAvatarId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAvatarId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarId, other.avatarId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("RecomputeCurrentPostureValues_args(");
      boolean first = true;

      sb.append("avatarId:");
      if (this.avatarId == null) {
        sb.append("null");
      } else {
        sb.append(this.avatarId);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class RecomputeCurrentPostureValues_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RecomputeCurrentPostureValues_argsStandardScheme getScheme() {
        return new RecomputeCurrentPostureValues_argsStandardScheme();
      }
    }

    private static class RecomputeCurrentPostureValues_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<RecomputeCurrentPostureValues_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, RecomputeCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // AVATAR_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.avatarId = iprot.readString();
                struct.setAvatarIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, RecomputeCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.avatarId != null) {
          oprot.writeFieldBegin(AVATAR_ID_FIELD_DESC);
          oprot.writeString(struct.avatarId);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class RecomputeCurrentPostureValues_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RecomputeCurrentPostureValues_argsTupleScheme getScheme() {
        return new RecomputeCurrentPostureValues_argsTupleScheme();
      }
    }

    private static class RecomputeCurrentPostureValues_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<RecomputeCurrentPostureValues_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, RecomputeCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetAvatarId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetAvatarId()) {
          oprot.writeString(struct.avatarId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, RecomputeCurrentPostureValues_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.avatarId = iprot.readString();
          struct.setAvatarIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class RecomputeCurrentPostureValues_result implements org.apache.thrift.TBase<RecomputeCurrentPostureValues_result, RecomputeCurrentPostureValues_result._Fields>, java.io.Serializable, Cloneable, Comparable<RecomputeCurrentPostureValues_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RecomputeCurrentPostureValues_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RecomputeCurrentPostureValues_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RecomputeCurrentPostureValues_resultTupleSchemeFactory();

    public @org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      @org.apache.thrift.annotation.Nullable
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, de.mosim.mmi.avatar.MAvatarPostureValues.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RecomputeCurrentPostureValues_result.class, metaDataMap);
    }

    public RecomputeCurrentPostureValues_result() {
    }

    public RecomputeCurrentPostureValues_result(
      de.mosim.mmi.avatar.MAvatarPostureValues success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public RecomputeCurrentPostureValues_result(RecomputeCurrentPostureValues_result other) {
      if (other.isSetSuccess()) {
        this.success = new de.mosim.mmi.avatar.MAvatarPostureValues(other.success);
      }
    }

    public RecomputeCurrentPostureValues_result deepCopy() {
      return new RecomputeCurrentPostureValues_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    @org.apache.thrift.annotation.Nullable
    public de.mosim.mmi.avatar.MAvatarPostureValues getSuccess() {
      return this.success;
    }

    public RecomputeCurrentPostureValues_result setSuccess(@org.apache.thrift.annotation.Nullable de.mosim.mmi.avatar.MAvatarPostureValues success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((de.mosim.mmi.avatar.MAvatarPostureValues)value);
        }
        break;

      }
    }

    @org.apache.thrift.annotation.Nullable
    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof RecomputeCurrentPostureValues_result)
        return this.equals((RecomputeCurrentPostureValues_result)that);
      return false;
    }

    public boolean equals(RecomputeCurrentPostureValues_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(RecomputeCurrentPostureValues_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    @org.apache.thrift.annotation.Nullable
    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("RecomputeCurrentPostureValues_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class RecomputeCurrentPostureValues_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RecomputeCurrentPostureValues_resultStandardScheme getScheme() {
        return new RecomputeCurrentPostureValues_resultStandardScheme();
      }
    }

    private static class RecomputeCurrentPostureValues_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<RecomputeCurrentPostureValues_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, RecomputeCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new de.mosim.mmi.avatar.MAvatarPostureValues();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, RecomputeCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class RecomputeCurrentPostureValues_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public RecomputeCurrentPostureValues_resultTupleScheme getScheme() {
        return new RecomputeCurrentPostureValues_resultTupleScheme();
      }
    }

    private static class RecomputeCurrentPostureValues_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<RecomputeCurrentPostureValues_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, RecomputeCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, RecomputeCurrentPostureValues_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new de.mosim.mmi.avatar.MAvatarPostureValues();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
